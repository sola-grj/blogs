import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,d as t,o as e}from"./app-Ba2CBXJF.js";const p={};function l(o,n){return e(),s("div",null,n[0]||(n[0]=[t(`<h2 id="事件与事件流" tabindex="-1"><a class="header-anchor" href="#事件与事件流"><span>事件与事件流</span></a></h2><p>事件流都会经历三个阶段</p><ul><li>事件捕获阶段</li><li>处于目标阶段</li><li>事件冒泡阶段</li></ul><p>事件模型可以分为三种</p><h3 id="原始事件模型" tabindex="-1"><a class="header-anchor" href="#原始事件模型"><span>原始事件模型</span></a></h3><p>绑定事件监听有两种方式：</p><ol><li><p>HTML代码中直接绑定</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value javascript language-javascript"><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>通过JS代码绑定</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;.btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> fun<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>特性：</p><ul><li><p>绑定速度快</p></li><li><p>只支持冒泡，不支持捕获</p></li><li><p>同一个类型得事件只能绑定一次</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">&quot;button&quot;</span> id<span class="token operator">=</span><span class="token string">&quot;btn&quot;</span> onclick<span class="token operator">=</span><span class="token string">&quot;fun1()&quot;</span><span class="token operator">&gt;</span>
<span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;.btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> fun2<span class="token punctuation">;</span>
<span class="token comment">// 这种情况，后绑定得事件会覆盖首次绑定得事件 </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除DOM0 级别事件处理只要将事件属性设置为null</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ul><h3 id="标准事件模型" tabindex="-1"><a class="header-anchor" href="#标准事件模型"><span>标准事件模型</span></a></h3><p>该模型，涉及三个过程</p><ul><li>事件捕获阶段：事件从</li><li>事件处理阶段</li><li>事件冒泡阶段</li></ul><p>事件绑定监听函数方式如下</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">addEventListener</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> useCapture<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>事件移除监听函数方式如下</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">removeEventListener</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> handler<span class="token punctuation">,</span> useCapture<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>特性</p><ul><li><p>可以在一个DOM上绑定多个事件处理器</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>‘click’<span class="token punctuation">,</span> showMessage1<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>‘click’<span class="token punctuation">,</span> showMessage2<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>‘click’<span class="token punctuation">,</span> showMessage3<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行时机：当第三个参数（useCapture）设置为true就在捕获过程中执行，反之在冒泡过程中执行处理函数</p></li></ul><h3 id="ie事件模型" tabindex="-1"><a class="header-anchor" href="#ie事件模型"><span>IE事件模型</span></a></h3><p>IE事件模型共有两个阶段</p><ul><li>事件处理阶段</li><li>事件冒泡阶段</li></ul><p>事件绑定监听函数方式如下</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">attachEvent</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>事件移除监听函数方式如下</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">detachEvent</span><span class="token punctuation">(</span>eventType<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;.btn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">attachEvent</span><span class="token punctuation">(</span>‘onclick’<span class="token punctuation">,</span> showMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
btn<span class="token punctuation">.</span><span class="token function">detachEvent</span><span class="token punctuation">(</span>‘onclick’<span class="token punctuation">,</span> showMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="事件代理" tabindex="-1"><a class="header-anchor" href="#事件代理"><span>事件代理</span></a></h3><p>事件代理就是在冒泡阶段完成，会把一个护着一组元素的事件委托到它的浮层 或者更外层元素上，真正绑定的是外层元素，而不是目标元素</p><p>如果 有一个列表，列表中 有大量的列表项，我们需要再点击列表项的时候响应一个事件</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>item 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>item 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>item 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
 ......
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>item n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果给每个列表项都绑定一个函数，那么消耗无疑是巨大的</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时可以通过事件委托，把点击事件绑定在父元素ul上</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;list&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// 兼容性处理</span>
 <span class="token keyword">var</span> event <span class="token operator">=</span> e <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span>
 <span class="token keyword">var</span> target <span class="token operator">=</span> event<span class="token punctuation">.</span>target <span class="token operator">||</span> event<span class="token punctuation">.</span>srcElement<span class="token punctuation">;</span>
 <span class="token comment">// 判断是否匹配目标元素</span>
 <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span>nodeName<span class="token punctuation">.</span>toLocaleLowerCase <span class="token operator">===</span> <span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;the content is: &#39;</span><span class="token punctuation">,</span> target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>适合委托事件的有：</p><ul><li>click</li><li>mousedown</li><li>mouseup</li><li>keydown</li><li>keyup</li><li>keypress</li></ul>`,37)]))}const u=a(p,[["render",l],["__file","事件模型.html.vue"]]),r=JSON.parse(`{"path":"/web/js/%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9E%8B.html","title":"事件模型与事件代理","lang":"zh-CN","frontmatter":{"title":"事件模型与事件代理","icon":"gears","order":4,"category":["js"],"tag":["js"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"事件与事件流 事件流都会经历三个阶段 事件捕获阶段 处于目标阶段 事件冒泡阶段 事件模型可以分为三种 原始事件模型 绑定事件监听有两种方式： HTML代码中直接绑定 通过JS代码绑定 特性： 绑定速度快 只支持冒泡，不支持捕获 同一个类型得事件只能绑定一次 删除DOM0 级别事件处理只要将事件属性设置为null 标准事件模型 该模型，涉及三个过程 事件...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/web/js/%E4%BA%8B%E4%BB%B6%E6%A8%A1%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"事件模型与事件代理"}],["meta",{"property":"og:description","content":"事件与事件流 事件流都会经历三个阶段 事件捕获阶段 处于目标阶段 事件冒泡阶段 事件模型可以分为三种 原始事件模型 绑定事件监听有两种方式： HTML代码中直接绑定 通过JS代码绑定 特性： 绑定速度快 只支持冒泡，不支持捕获 同一个类型得事件只能绑定一次 删除DOM0 级别事件处理只要将事件属性设置为null 标准事件模型 该模型，涉及三个过程 事件..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-18T09:43:26.000Z"}],["meta",{"property":"article:author","content":"孜然地球"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:modified_time","content":"2024-09-18T09:43:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件模型与事件代理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-18T09:43:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"事件与事件流","slug":"事件与事件流","link":"#事件与事件流","children":[{"level":3,"title":"原始事件模型","slug":"原始事件模型","link":"#原始事件模型","children":[]},{"level":3,"title":"标准事件模型","slug":"标准事件模型","link":"#标准事件模型","children":[]},{"level":3,"title":"IE事件模型","slug":"ie事件模型","link":"#ie事件模型","children":[]},{"level":3,"title":"事件代理","slug":"事件代理","link":"#事件代理","children":[]}]}],"git":{"createdTime":1726652606000,"updatedTime":1726652606000,"contributors":[{"name":"sola-grj","email":"1131631886@qq.com","commits":1}]},"readingTime":{"minutes":2.25,"words":676},"filePathRelative":"web/js/事件模型.md","localizedDate":"2024年9月18日","excerpt":"<h2>事件与事件流</h2>\\n<p>事件流都会经历三个阶段</p>\\n<ul>\\n<li>事件捕获阶段</li>\\n<li>处于目标阶段</li>\\n<li>事件冒泡阶段</li>\\n</ul>\\n<p>事件模型可以分为三种</p>\\n<h3>原始事件模型</h3>\\n<p>绑定事件监听有两种方式：</p>\\n<ol>\\n<li>\\n<p>HTML代码中直接绑定</p>\\n<div class=\\"language-html\\" data-ext=\\"html\\" data-title=\\"html\\"><pre class=\\"language-html\\"><code><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>input</span> <span class=\\"token attr-name\\">type</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>button<span class=\\"token punctuation\\">\\"</span></span> <span class=\\"token special-attr\\"><span class=\\"token attr-name\\">onclick</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span><span class=\\"token value javascript language-javascript\\"><span class=\\"token function\\">fun</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span></span><span class=\\"token punctuation\\">\\"</span></span></span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre></div></li>\\n<li>\\n<p>通过JS代码绑定</p>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">var</span> btn <span class=\\"token operator\\">=</span> document<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getElementById</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'.btn'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\nbtn<span class=\\"token punctuation\\">.</span>onclick <span class=\\"token operator\\">=</span> fun<span class=\\"token punctuation\\">;</span>\\n</code></pre></div></li>\\n</ol>","autoDesc":true}`);export{u as comp,r as data};
