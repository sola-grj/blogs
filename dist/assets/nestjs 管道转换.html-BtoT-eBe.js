import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,d as a,o}from"./app-BCMx_cTT.js";const r="/blogs/assets/images/node/nestjs/35.png",i="/blogs/assets/images/node/nestjs/36.png",n="/blogs/assets/images/node/nestjs/37.png",p={};function l(c,e){return o(),s("div",null,e[0]||(e[0]=[a('<p><img src="'+r+'" alt="管道" loading="lazy"> 管道 可以做两件事</p><p>1.转换，可以将前端传入的数据转成成我们需要的数据</p><p>2.验证 类似于前端的 rules 配置验证规则</p><p>我们先来讲一下转换 <a href="https://so.csdn.net/so/search?q=Nestjs&amp;spm=1001.2101.3001.7020" target="_blank" rel="noopener noreferrer">Nestjs</a> 提供了八个内置转换 API</p><ul><li><code>ValidationPipe</code></li><li><code>ParseIntPipe</code></li><li><code>ParseFloatPipe</code></li><li><code>ParseBoolPipe</code></li><li><code>ParseArrayPipe</code></li><li><code>ParseUUIDPipe</code></li><li><code>ParseEnumPipe</code></li><li><code>DefaultValuePipe</code></li></ul><h4 id="案例-1-我们接受的动态参数希望是一个-number-类型-现在是-string" tabindex="-1"><a class="header-anchor" href="#案例-1-我们接受的动态参数希望是一个-number-类型-现在是-string"><span>案例 1 我们接受的动态参数希望是一个 number 类型 现在是 string</span></a></h4><p>这时候就可以通过内置的管道 去做转换</p><figure><img src="'+i+'" alt="管道" tabindex="0" loading="lazy"><figcaption>管道</figcaption></figure><h4 id="案例-2-验证-uuid" tabindex="-1"><a class="header-anchor" href="#案例-2-验证-uuid"><span>案例 2 验证 UUID</span></a></h4><p>安装 uuid</p><p>npm install uuid -S</p><p>npm install @types/uuid -D</p><p>生成一个 uuid</p><figure><img src="'+n+'" alt="管道" tabindex="0" loading="lazy"><figcaption>管道</figcaption></figure>',14)]))}const g=t(p,[["render",l]]),u=JSON.parse('{"path":"/node/nestjs/nestjs%20%E7%AE%A1%E9%81%93%E8%BD%AC%E6%8D%A2.html","title":"nestjs 管道转换","lang":"zh-CN","frontmatter":{"title":"nestjs 管道转换","icon":"gears","order":4,"category":["node"],"tag":["nestjs"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"管道 管道 可以做两件事 1.转换，可以将前端传入的数据转成成我们需要的数据 2.验证 类似于前端的 rules 配置验证规则 我们先来讲一下转换 Nestjs 提供了八个内置转换 API ValidationPipe ParseIntPipe ParseFloatPipe ParseBoolPipe ParseArrayPipe ParseUUIDP...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nestjs 管道转换\\",\\"image\\":[\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/35.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/36.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/37.png\\"],\\"dateModified\\":\\"2025-01-13T07:14:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/node/nestjs/nestjs%20%E7%AE%A1%E9%81%93%E8%BD%AC%E6%8D%A2.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"nestjs 管道转换"}],["meta",{"property":"og:description","content":"管道 管道 可以做两件事 1.转换，可以将前端传入的数据转成成我们需要的数据 2.验证 类似于前端的 rules 配置验证规则 我们先来讲一下转换 Nestjs 提供了八个内置转换 API ValidationPipe ParseIntPipe ParseFloatPipe ParseBoolPipe ParseArrayPipe ParseUUIDP..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/blogs/assets/images/node/nestjs/35.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-13T07:14:15.000Z"}],["meta",{"property":"article:tag","content":"nestjs"}],["meta",{"property":"article:modified_time","content":"2025-01-13T07:14:15.000Z"}]]},"git":{"createdTime":1736752455000,"updatedTime":1736752455000,"contributors":[{"name":"garry","username":"garry","email":"Garryg@ecinnovations.com","commits":1,"url":"https://github.com/garry"}]},"readingTime":{"minutes":0.64,"words":191},"filePathRelative":"node/nestjs/nestjs 管道转换.md","excerpt":"<p><img src=\\"/assets/images/node/nestjs/35.png\\" alt=\\"管道\\" loading=\\"lazy\\">\\n管道 可以做两件事</p>\\n<p>1.转换，可以将前端传入的数据转成成我们需要的数据</p>\\n<p>2.验证 类似于前端的 rules 配置验证规则</p>\\n<p>我们先来讲一下转换 <a href=\\"https://so.csdn.net/so/search?q=Nestjs&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Nestjs</a> 提供了八个内置转换 API</p>","autoDesc":true}');export{g as comp,u as data};
