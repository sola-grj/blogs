import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as i,c,a as n,e as s,b as e,d as t}from"./app-tdQwJvOh.js";const l="/blogs/assets/images/node/nestjs/15.png",r="/blogs/assets/images/node/nestjs/16.png",u="/blogs/assets/images/node/nestjs/17.png",d="/blogs/assets/images/node/nestjs/18.png",k="/blogs/assets/images/node/nestjs/19.png",v="/blogs/assets/images/node/nestjs/20.png",m="/blogs/assets/images/node/nestjs/21.png",b={},g=n("h2",{id:"providers",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#providers"},[n("span",null,"Providers")])],-1),h=n("code",null,"Nest",-1),y=n("code",null,"Nest",-1),f=n("code",null,"service",-1),_=n("code",null,"repository",-1),q=n("code",null,"factory",-1),w=n("code",null,"helper",-1),j=n("code",null,"constructor",-1),U=n("strong",null,"注入",-1),x=n("code",null,"Nest",-1),S=n("code",null,"@Injectable()",-1),E={href:"https://so.csdn.net/so/search?q=%E8%A3%85%E9%A5%B0%E5%99%A8&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},N=t('<h4 id="_1-基本用法" tabindex="-1"><a class="header-anchor" href="#_1-基本用法"><span>1.基本用法</span></a></h4><p>module 引入 service  在  providers 注入</p><figure><img src="'+l+'" alt="注入" tabindex="0" loading="lazy"><figcaption>注入</figcaption></figure><p>在 Controller 就可以使用注入好的 service 了</p><figure><img src="'+r+'" alt="使用" tabindex="0" loading="lazy"><figcaption>使用</figcaption></figure><h4 id="_2-service-第二种用法-自定义名称" tabindex="-1"><a class="header-anchor" href="#_2-service-第二种用法-自定义名称"><span>2.service 第二种用法(自定义名称)</span></a></h4>',6),P={href:"https://so.csdn.net/so/search?q=%E8%AF%AD%E6%B3%95%E7%B3%96&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},C=t(`<p>其实他的全称是这样的</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.controller&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span>UserController<span class="token punctuation">]</span><span class="token punctuation">,</span>

  providers<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;Xiaoman&quot;</span><span class="token punctuation">,</span>

      useClass<span class="token operator">:</span> UserService<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UserModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+'" alt="别名" tabindex="0" loading="lazy"><figcaption>别名</figcaption></figure><p>自定义名称之后 需要用对应的 Inject 取 不然会找不到的</p><figure><img src="'+d+`" alt="别名对应" tabindex="0" loading="lazy"><figcaption>别名对应</figcaption></figure><h4 id="_3-自定义注入值" tabindex="-1"><a class="header-anchor" href="#_3-自定义注入值"><span>3.自定义注入值</span></a></h4><p>通过  useValue</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.controller&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span>UserController<span class="token punctuation">]</span><span class="token punctuation">,</span>

  providers<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;Xiaoman&quot;</span><span class="token punctuation">,</span>

      useClass<span class="token operator">:</span> UserService<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;JD&quot;</span><span class="token punctuation">,</span>

      useValue<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;TB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PDD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JD&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UserModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+k+'" alt="自定义注入值" tabindex="0" loading="lazy"><figcaption>自定义注入值</figcaption></figure><figure><img src="'+v+`" alt="自定义注入值使用" tabindex="0" loading="lazy"><figcaption>自定义注入值使用</figcaption></figure><h4 id="_3-工厂模式" tabindex="-1"><a class="header-anchor" href="#_3-工厂模式"><span>3.工厂模式</span></a></h4><p>如果服务 之间有相互的依赖 或者逻辑处理 可以使用  useFactory</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service2&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService3 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.controller&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span>UserController<span class="token punctuation">]</span><span class="token punctuation">,</span>

  providers<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;Xiaoman&quot;</span><span class="token punctuation">,</span>

      useClass<span class="token operator">:</span> UserService<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;JD&quot;</span><span class="token punctuation">,</span>

      useValue<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;TB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PDD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JD&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    UserService2<span class="token punctuation">,</span>

    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span>

      inject<span class="token operator">:</span> <span class="token punctuation">[</span>UserService2<span class="token punctuation">]</span><span class="token punctuation">,</span>

      <span class="token function">useFactory</span><span class="token punctuation">(</span>UserService2<span class="token operator">:</span> UserService2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserService3</span><span class="token punctuation">(</span>UserService2<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UserModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-异步模式" tabindex="-1"><a class="header-anchor" href="#_4-异步模式"><span>4.异步模式</span></a></h4><p>useFactory 返回一个 promise 或者其他异步操作</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Module <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService2 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service2&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserService3 <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.service3&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> UserController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./user.controller&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Module</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  controllers<span class="token operator">:</span> <span class="token punctuation">[</span>UserController<span class="token punctuation">]</span><span class="token punctuation">,</span>

  providers<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;Xiaoman&quot;</span><span class="token punctuation">,</span>

      useClass<span class="token operator">:</span> UserService<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;JD&quot;</span><span class="token punctuation">,</span>

      useValue<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;TB&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;PDD&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;JD&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    UserService2<span class="token punctuation">,</span>

    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span>

      inject<span class="token operator">:</span> <span class="token punctuation">[</span>UserService2<span class="token punctuation">]</span><span class="token punctuation">,</span>

      <span class="token function">useFactory</span><span class="token punctuation">(</span>UserService2<span class="token operator">:</span> UserService2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserService3</span><span class="token punctuation">(</span>UserService2<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token punctuation">{</span>
      provide<span class="token operator">:</span> <span class="token string">&quot;sync&quot;</span><span class="token punctuation">,</span>

      <span class="token keyword">async</span> <span class="token function">useFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">r</span><span class="token punctuation">(</span><span class="token string">&quot;sync&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">UserModule</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+m+'" alt="异步模式" tabindex="0" loading="lazy"><figcaption>异步模式</figcaption></figure>',17);function D(B,M){const a=p("ExternalLinkIcon");return i(),c("div",null,[g,n("p",null,[s("Providers 是  "),h,s("  的一个基本概念。许多基本的  "),y,s("  类可能被视为 provider - "),f,s(", "),_,s(", "),q,s(", "),w,s("  等等。 他们都可以通过  "),j,s(" "),U,s("依赖关系。 这意味着对象可以彼此创建各种关系，并且“连接”对象实例的功能在很大程度上可以委托给  "),x,s("运行时系统。 Provider 只是一个用  "),S,s(" "),n("a",E,[s("装饰器"),e(a)]),s("注释的类。")]),N,n("p",null,[s("第一种用法就是一个"),n("a",P,[s("语法糖"),e(a)])]),C])}const A=o(b,[["render",D],["__file","nestjs 提供者.html.vue"]]),F=JSON.parse('{"path":"/node/nestjs/nestjs%20%E6%8F%90%E4%BE%9B%E8%80%85.html","title":"nestjs 提供者","lang":"zh-CN","frontmatter":{"title":"nestjs 提供者","icon":"gears","order":4,"category":["node"],"tag":["nestjs"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"Providers Providers 是 Nest 的一个基本概念。许多基本的 Nest 类可能被视为 provider - service, repository, factory, helper 等等。 他们都可以通过 constructor 注入依赖关系。 这意味着对象可以彼此创建各种关系，并且“连接”对象实例的功能在很大程度上可以委托给 Ne...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/node/nestjs/nestjs%20%E6%8F%90%E4%BE%9B%E8%80%85.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"nestjs 提供者"}],["meta",{"property":"og:description","content":"Providers Providers 是 Nest 的一个基本概念。许多基本的 Nest 类可能被视为 provider - service, repository, factory, helper 等等。 他们都可以通过 constructor 注入依赖关系。 这意味着对象可以彼此创建各种关系，并且“连接”对象实例的功能在很大程度上可以委托给 Ne..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/blogs/assets/images/node/nestjs/15.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-06T09:59:22.000Z"}],["meta",{"property":"article:author","content":"孜然地球"}],["meta",{"property":"article:tag","content":"nestjs"}],["meta",{"property":"article:modified_time","content":"2025-01-06T09:59:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nestjs 提供者\\",\\"image\\":[\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/15.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/16.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/17.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/18.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/19.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/20.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/21.png\\"],\\"dateModified\\":\\"2025-01-06T09:59:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"Providers","slug":"providers","link":"#providers","children":[]}],"git":{"createdTime":1736157562000,"updatedTime":1736157562000,"contributors":[{"name":"garry","email":"Garryg@ecinnovations.com","commits":1}]},"readingTime":{"minutes":1.69,"words":507},"filePathRelative":"node/nestjs/nestjs 提供者.md","localizedDate":"2025年1月6日","excerpt":"<h2>Providers</h2>\\n<p>Providers 是 &nbsp;<code>Nest</code>&nbsp; 的一个基本概念。许多基本的 &nbsp;<code>Nest</code>&nbsp; 类可能被视为 provider -&nbsp;<code>service</code>,&nbsp;<code>repository</code>,&nbsp;<code>factory</code>,&nbsp;<code>helper</code>&nbsp; 等等。 他们都可以通过 &nbsp;<code>constructor</code>&nbsp;<strong>注入</strong>依赖关系。 这意味着对象可以彼此创建各种关系，并且“连接”对象实例的功能在很大程度上可以委托给 &nbsp;<code>Nest</code>运行时系统。 Provider 只是一个用 &nbsp;<code>@Injectable()</code>&nbsp;<a href=\\"https://so.csdn.net/so/search?q=%E8%A3%85%E9%A5%B0%E5%99%A8&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">装饰器</a>注释的类。</p>","autoDesc":true}');export{A as comp,F as data};
