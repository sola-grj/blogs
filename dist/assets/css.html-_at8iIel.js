import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as e}from"./app-BCMx_cTT.js";const l={};function h(t,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="css总结" tabindex="-1"><a class="header-anchor" href="#css总结"><span>css总结</span></a></h1><h2 id="_1-div上下布局" tabindex="-1"><a class="header-anchor" href="#_1-div上下布局"><span>1.div上下布局</span></a></h2><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.zj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  width: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">100</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  height: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">40</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">%</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  display: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  flex-direction: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">column</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-div虚线边框" tabindex="-1"><a class="header-anchor" href="#_2-div虚线边框"><span>2.div虚线边框</span></a></h2><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">border-top</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">: 3px dashed </span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">#ffffff;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_3-flex布局" tabindex="-1"><a class="header-anchor" href="#_3-flex布局"><span>3.flex布局</span></a></h2><h3 id="_1、flex-direction属性" tabindex="-1"><a class="header-anchor" href="#_1、flex-direction属性"><span>1、flex-direction属性</span></a></h3><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { flex-direction: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">row</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">row-reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">column</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">column-reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2、flex-wrap属性" tabindex="-1"><a class="header-anchor" href="#_2、flex-wrap属性"><span>2、flex-wrap属性</span></a></h3><p>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{ flex-wrap: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">nowrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">wrap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">wrap-reverse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>nowrap（默认）：不换行。</li><li>wrap：换行，第一行在上方。</li><li>wrap-reverse：换行，第一行在下方。</li></ul><h3 id="_3、flex-flow" tabindex="-1"><a class="header-anchor" href="#_3、flex-flow"><span>3、flex-flow</span></a></h3><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { flex-flow: &lt;flex-direction&gt; || &lt;flex-wrap&gt;; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4、justify-content属性" tabindex="-1"><a class="header-anchor" href="#_4、justify-content属性"><span>4、justify-content属性</span></a></h3><p>justify-content属性定义了项目在主轴上的对齐方式。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { justify-content: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">space-between</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">space-around</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>flex-start（默认值）：左对齐</li><li>flex-end：右对齐</li><li>center： 居中</li><li>space-between：两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><h3 id="_5、align-items属性" tabindex="-1"><a class="header-anchor" href="#_5、align-items属性"><span>5、align-items属性</span></a></h3><p>align-items属性定义项目在交叉轴上如何对齐。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { align-items: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">baseline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li>center：交叉轴的中点对齐。</li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><h3 id="_6、align-content属性" tabindex="-1"><a class="header-anchor" href="#_6、align-content属性"><span>6、align-content属性</span></a></h3><p>align-content属性定义了多根轴线（多行）的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.box</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { align-content: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">space-between</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">space-around</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）：轴线占满整个交叉轴。</li></ul><h2 id="_4-项目的属性" tabindex="-1"><a class="header-anchor" href="#_4-项目的属性"><span>4.项目的属性</span></a></h2><h3 id="_1、order属性" tabindex="-1"><a class="header-anchor" href="#_1、order属性"><span>1、order属性</span></a></h3><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { order: &lt;integer&gt;; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2、flex-grow属性" tabindex="-1"><a class="header-anchor" href="#_2、flex-grow属性"><span>2、flex-grow属性</span></a></h3><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { flex-grow: &lt;number&gt;; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* default 0 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3、flex-shrink" tabindex="-1"><a class="header-anchor" href="#_3、flex-shrink"><span>3、flex-shrink</span></a></h3><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。 负值对该属性无效。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { flex-shrink: &lt;number&gt;; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* default 1 */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4、flex-basis属性" tabindex="-1"><a class="header-anchor" href="#_4、flex-basis属性"><span>4、flex-basis属性</span></a></h3><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { flex-basis: &lt;length&gt;; | auto; </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* default auto */</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_5、flex属性" tabindex="-1"><a class="header-anchor" href="#_5、flex属性"><span>5、flex属性</span></a></h3><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { flex: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">none</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | [ &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;flex-grow&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;flex-shrink&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;? || &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;flex-basis&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; ] }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_6、align-self属性" tabindex="-1"><a class="header-anchor" href="#_6、align-self属性"><span>6、align-self属性</span></a></h3><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> { align-self: </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">auto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-start</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">flex-end</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">center</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">baseline</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">stretch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_5-svg" tabindex="-1"><a class="header-anchor" href="#_5-svg"><span>5.svg</span></a></h2><p>前段时间研究 SVG 压缩优化，发现SVG预定义的 <code>rect</code>、<code>circle</code>、<code>ellipse</code>、<code>line</code>、<code>polyline</code>、<code>polygon</code> <a href="https://www.w3cplus.com/svg/svg-basic-shapes.html" target="_blank" rel="noopener noreferrer">六种基本形状</a>可通过<a href="https://www.w3cplus.com/svg/svg-path.html" target="_blank" rel="noopener noreferrer"><code>path</code>路径</a>转换实现，这样可以在一定程度上减少代码量。不仅如此，我们常用的 SVG Path 动画(路径动画)，是以操作<code>path</code>中两个属性值<code>stroke-dasharray</code>和<code>stroke-dashoffset</code>来实现，基本形状转换为<code>path</code>路径，有利于实现路径动画。</p><h2 id="svg基本形状" tabindex="-1"><a class="header-anchor" href="#svg基本形状"><span>SVG基本形状</span></a></h2><p>SVG 提供了<code>rect</code>、<code>circle</code>、<code>ellipse</code>、<code>line</code>、<code>polyline</code>、<code>polygon</code>六种<a href="https://www.w3cplus.com/svg/svg-basic-shapes.html" target="_blank" rel="noopener noreferrer">基本形状</a>用于图形绘制，这些形状可以直接用来绘制一些基本的形状，如矩形、椭圆等，而复杂图形的绘制则需要使用 <code>path</code> 路径来实现。</p><h3 id="rect-矩形" tabindex="-1"><a class="header-anchor" href="#rect-矩形"><span><code>rect</code> 矩形</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;rect x=&quot;10&quot; y=&quot;10&quot; width=&quot;30&quot; height=&quot;30&quot;/&gt;</span></span>
<span class="line"><span>&lt;rect x=&quot;60&quot; y=&quot;10&quot; rx=&quot;10&quot; ry=&quot;10&quot; width=&quot;30&quot; height=&quot;30&quot;/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>SVG中<code>rect</code>元素用于绘制矩形、圆角矩形，含有<code>6</code>个基本属性用于控制矩形的形状以及坐标，具体如下：</p><ul><li><code>x</code>：矩形左上角<code>x</code>位置, 默认值为 <code>0</code></li><li><code>y</code>：矩形左上角<code>y</code>位置, 默认值为 <code>0</code></li><li><code>width</code>：矩形的宽度, 不能为负值否则报错, <code>0</code> 值不绘制</li><li><code>height</code>：矩形的高度, 不能为负值否则报错, <code>0</code> 值不绘制</li><li><code>rx</code>：圆角<code>x</code>方向半径, 不能为负值否则报错</li><li><code>ry</code>：圆角<code>y</code>方向半径, 不能为负值否则报错</li></ul><p>这里需要注意，<code>rx</code> 和 <code>ry</code> 的还有如下规则：</p><ul><li><code>rx</code> 和 <code>ry</code> 都没有设置, 则 <code>rx = 0 ry = 0</code></li><li><code>rx</code> 和 <code>ry</code> 有一个值为0, 则相当于 <code>rx = 0 ry = 0</code>，圆角无效</li><li><code>rx</code> 和 <code>ry</code> 有一个被设置, 则全部取这个被设置的值</li><li><code>rx</code> 的最大值为 <code>width</code> 的一半, <code>ry</code> 的最大值为 <code>height</code> 的一半</li></ul><h3 id="circle-圆形" tabindex="-1"><a class="header-anchor" href="#circle-圆形"><span><code>circle</code> 圆形</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;circle cx=&quot;100&quot; cy=&quot;100&quot; r=&quot;50&quot; fill=&quot;#fff&quot;&gt;&lt;/circle&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>SVG中<code>circle</code>元素用于绘制圆形，含有3个基本属性用于控制圆形的坐标以及半径，具体如下：</p><ul><li><code>r</code>：半径</li><li><code>cx</code>：圆心<code>x</code>位置, 默认为 <code>0</code></li><li><code>cy</code>：圆心<code>y</code>位置, 默认为 <code>0</code></li></ul><h3 id="ellipse-椭圆" tabindex="-1"><a class="header-anchor" href="#ellipse-椭圆"><span><code>ellipse</code> 椭圆</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;ellipse cx=&quot;75&quot; cy=&quot;75&quot; rx=&quot;20&quot; ry=&quot;5&quot;/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>SVG中<code>ellipse</code>元素用于绘制椭圆，是<code>circle</code>元素更通用的形式，含有<code>4</code>个基本属性用于控制椭圆的形状以及坐标，具体如下：</p><ul><li><code>rx</code>：椭圆<code>x</code>半径</li><li><code>ry</code>：椭圆<code>y</code>半径</li><li><code>cx</code>：圆心<code>x</code>位置, 默认为 <code>0</code></li><li><code>cy</code>：圆心<code>y</code>位置, 默认为 <code>0</code></li></ul><h3 id="line-直线" tabindex="-1"><a class="header-anchor" href="#line-直线"><span><code>line</code> 直线</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;line x1=&quot;10&quot; x2=&quot;50&quot; y1=&quot;110&quot; y2=&quot;150&quot;/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>line</code>绘制直线。它取两个点的位置作为属性，指定这条线的起点和终点位置。</p><ul><li><code>x1</code>：起点的<code>x</code>位置</li><li><code>y1</code>：起点的<code>y</code>位置</li><li><code>x2</code>：终点的<code>x</code>位置</li><li><code>y2</code>：终点的<code>y</code>位置</li></ul><h3 id="polyline-折线" tabindex="-1"><a class="header-anchor" href="#polyline-折线"><span><code>polyline</code> 折线</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;polyline points=&quot;60 110, 65 120, 70 115, 75 130, 80 125, 85 140, 90 135, 95 150, 100 145&quot;/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>polyline</code>是一组连接在一起的直线。因为它可以有很多的点，折线的的所有点位置都放在一个<code>points</code>属性中：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>points\` 点集数列，每个数字用空白、逗号、终止命令符或者换行符分隔开，每个点必须包含\`2\`个数字，一个是\`x\`坐标，一个是\`y\`坐标 如\`0 0, 1 1, 2 2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="polygon-多边形" tabindex="-1"><a class="header-anchor" href="#polygon-多边形"><span><code>polygon</code> 多边形</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>&lt;polygon points=&quot;50 160, 55 180, 70 180, 60 190, 65 205, 50 195, 35 205, 40 190, 30 180, 45 180&quot;/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><code>polygon</code>和折线很像，它们都是由连接一组点集的直线构成。不同的是，<code>polygon</code>的路径在最后一个点处自动回到第一个点。需要注意的是，矩形也是一种多边形，如果需要更多灵活性的话，你也可以用多边形创建一个矩形。</p><p><code>points</code> 点集数列，每个数字用空白、逗号、终止命令符或者换行符分隔开，每个点必须包含<code>2</code>个数字，一个是<code>x</code>坐标，一个是<code>y</code>坐标 如<code>0 0, 1 1, 2 2</code>， 路径绘制完闭合图形”</p><h2 id="svg-path-路径" tabindex="-1"><a class="header-anchor" href="#svg-path-路径"><span>SVG path 路径</span></a></h2><p>SVG 的<a href="https://www.w3cplus.com/svg/svg-path.html" target="_blank" rel="noopener noreferrer">路径\`\`</a>功能非常强大，它不仅能创建基本形状，还能创建更多复杂的形状。<code>&lt;path&gt;</code>路径是由一些命令来控制的，每一个命令对应一个字母，并且区分大小写，大写主要表示绝对定位，小写表示相对定位。<code>&lt;path&gt;</code> 通过属性 <code>d</code> 来定义路径， <code>d</code> 是一系列命令的集合，主要有以下几个命令：</p><figure><img src="https://www.w3cplus.com/sites/default/files/blogs/2018/1801/svgpath2.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>通常大部分形状，都可以通过指令<code>M(m)</code>、<code>L(l)</code>、<code>H(h)</code>、<code>V(v)</code>、<code>A(a)</code>来实现，注意特别要区分大小写，相对与绝对坐标情况，转换时推荐使用相对路径可减少代码量，例如：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// 以下两个等价</span></span>
<span class="line"><span>d=&#39;M 10 10 20 20&#39;     // (10, 10) (20 20) 都是绝对坐标</span></span>
<span class="line"><span>d=&#39;M 10 10 L 20 20&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 以下两个等价</span></span>
<span class="line"><span>d=&#39;m 10 10 20 20&#39;     // (10, 10) 绝对坐标, (20 20) 相对坐标</span></span>
<span class="line"><span>d=&#39;M 10 10 l 20 20&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="svg-基本形状路径转换原理" tabindex="-1"><a class="header-anchor" href="#svg-基本形状路径转换原理"><span>SVG 基本形状路径转换原理</span></a></h2><h3 id="rect-to-path" tabindex="-1"><a class="header-anchor" href="#rect-to-path"><span>rect to path</span></a></h3><p>如下图所示，一个 <code>rect</code> 是由 <code>4</code> 个弧和 <code>4</code> 个线段构成；如果 <code>rect</code> 没有设置 <code>rx</code> 和 <code>ry</code> 则 <code>rect</code> 只是由 <code>4</code> 个线段构成。<code>rect</code> 转换为 <code>path</code> 只需要将 <code>A ~ H</code> 之间的弧和线段依次实现即可。</p><figure><img src="https://www.w3cplus.com/sites/default/files/blogs/2018/1801/rect2path.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>function rect2path(x, y, width, height, rx, ry) {</span></span>
<span class="line"><span>    /*</span></span>
<span class="line"><span>    * rx 和 ry 的规则是：</span></span>
<span class="line"><span>    * 1. 如果其中一个设置为 0 则圆角不生效</span></span>
<span class="line"><span>    * 2. 如果有一个没有设置则取值为另一个</span></span>
<span class="line"><span>    */</span></span>
<span class="line"><span>    rx = rx || ry || 0;</span></span>
<span class="line"><span>    ry = ry || rx || 0;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //非数值单位计算，如当宽度像100%则移除</span></span>
<span class="line"><span>    if (isNaN(x - y + width - height + rx - ry)) return;</span></span>
<span class="line"><span>    rx = rx &gt; width / 2 ? width / 2 : rx;</span></span>
<span class="line"><span>    ry = ry &gt; height / 2 ? height / 2 : ry;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    //如果其中一个设置为 0 则圆角不生效</span></span>
<span class="line"><span>    if(0 == rx || 0 == ry){</span></span>
<span class="line"><span>        // var path =</span></span>
<span class="line"><span>        //     &#39;M&#39; + x + &#39; &#39; + y +</span></span>
<span class="line"><span>        //     &#39;H&#39; + (x + width) +     不推荐用绝对路径，相对路径节省代码量</span></span>
<span class="line"><span>        //     &#39;V&#39; + (y + height) +</span></span>
<span class="line"><span>        //     &#39;H&#39; + x +</span></span>
<span class="line"><span>        //     &#39;z&#39;;</span></span>
<span class="line"><span>        var path =</span></span>
<span class="line"><span>            &#39;M&#39; + x + &#39; &#39; + y +</span></span>
<span class="line"><span>            &#39;h&#39; + width +</span></span>
<span class="line"><span>            &#39;v&#39; + height +</span></span>
<span class="line"><span>            &#39;h&#39; + -width +</span></span>
<span class="line"><span>            &#39;z&#39;;                </span></span>
<span class="line"><span>    }else{</span></span>
<span class="line"><span>        var path =</span></span>
<span class="line"><span>            &#39;M&#39; + x + &#39; &#39; + (y+ry) +</span></span>
<span class="line"><span>            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + rx + &#39; &#39; + (-ry) + </span></span>
<span class="line"><span>            &#39;h&#39; + (width - rx - rx) +</span></span>
<span class="line"><span>            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + rx + &#39; &#39; + ry + </span></span>
<span class="line"><span>            &#39;v&#39; + (height - ry -ry) +</span></span>
<span class="line"><span>            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + (-rx) + &#39; &#39; + ry + </span></span>
<span class="line"><span>            &#39;h&#39; + (rx + rx -width) +</span></span>
<span class="line"><span>            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + (-rx) + &#39; &#39; + (-ry) + </span></span>
<span class="line"><span>            &#39;z&#39;;        </span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>    return path;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="circle-ellipse-to-path" tabindex="-1"><a class="header-anchor" href="#circle-ellipse-to-path"><span>circle/ellipse to path</span></a></h3><p>圆可视为是一种特殊的椭圆，即 <code>rx</code> 与 <code>ry</code> 相等的椭圆，所以可以放在一起讨论。 椭圆可以看成<code>A</code>点到<code>C</code>做<code>180</code>度顺时针画弧、<code>C</code>点到<code>A</code>做<code>180</code>度顺时针画弧即可：</p><figure><img src="https://www.w3cplus.com/sites/default/files/blogs/2018/1801/ellipse2path.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>function ellipse2path(cx, cy, rx, ry) {</span></span>
<span class="line"><span>    //非数值单位计算，如当宽度像100%则移除</span></span>
<span class="line"><span>    if (isNaN(cx - cy + rx - ry)) return;</span></span>
<span class="line"><span>    var path =</span></span>
<span class="line"><span>        &#39;M&#39; + (cx-rx) + &#39; &#39; + cy +</span></span>
<span class="line"><span>        &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 1 0 &#39; + 2*rx + &#39; 0&#39; +</span></span>
<span class="line"><span>        &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 1 0 &#39; + (-2*rx) + &#39; 0&#39; +</span></span>
<span class="line"><span>        &#39;z&#39;; </span></span>
<span class="line"><span>    return path;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="line-to-path" tabindex="-1"><a class="header-anchor" href="#line-to-path"><span>line to path</span></a></h3><p>相对来说比较简单，如下：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>function line2path(x1, y1, x2, y2) {</span></span>
<span class="line"><span>    //非数值单位计算，如当宽度像100%则移除</span></span>
<span class="line"><span>    if (isNaN(x1 - y1 + x2 - y2)) return; </span></span>
<span class="line"><span></span></span>
<span class="line"><span>    x1 = x1 || 0;</span></span>
<span class="line"><span>    y1 = y1 || 0;</span></span>
<span class="line"><span>    x2 = x2 || 0;</span></span>
<span class="line"><span>    y2 = y2 || 0;</span></span>
<span class="line"><span>    var path = &#39;M&#39; + x1 + &#39; &#39;+ y1 + &#39;L&#39; + x2 + &#39; &#39; + y2;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    return path;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="polyline-polygon-to-path" tabindex="-1"><a class="header-anchor" href="#polyline-polygon-to-path"><span>polyline/polygon to path</span></a></h3><p><code>polyline</code>折线、<code>polygon</code>多边形的转换为<code>path</code>比较类似，差别就是<code>polygon</code>多边形会闭合。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// polygon折线转换</span></span>
<span class="line"><span>points = [x1, y1, x2, y2, x3, y3 ...];</span></span>
<span class="line"><span>function polyline2path (points) {</span></span>
<span class="line"><span>    var path = &#39;M&#39; + points.slice(0,2).join(&#39; &#39;) +</span></span>
<span class="line"><span>                    &#39;L&#39; + points.slice(2).join(&#39; &#39;); </span></span>
<span class="line"><span>    return path;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>// polygon多边形转换</span></span>
<span class="line"><span>points = [x1, y1, x2, y2, x3, y3 ...];</span></span>
<span class="line"><span>function polygon2path (points) {</span></span>
<span class="line"><span>    var path = &#39;M&#39; + points.slice(0,2).join(&#39; &#39;) +</span></span>
<span class="line"><span>                    &#39;L&#39; + points.slice(2).join(&#39; &#39;) + &#39;z&#39;; </span></span>
<span class="line"><span>    return path;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="svg流动虚线" tabindex="-1"><a class="header-anchor" href="#svg流动虚线"><span>SVG流动虚线</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    .water</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        stroke-dasharray: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        stroke-dashoffset: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        animation: run </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> linear</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> infinite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    @keyframes</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        from {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            stroke-dasharray: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        to {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            stroke-dasharray: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">svg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2000/svg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;300px&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100px&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">rect</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;300&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;yellow&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke-width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;red&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">circle</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> cx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> cy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;50&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;15&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;blue&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;black&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke-width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">animateMotion</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;M 1306 637.125 L 1306 581.75 &quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3s&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> repeatCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;indefinite&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">circle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">g</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;none&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;black&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke-width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke-dasharray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;5,5&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;M5 20 l215 0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;water&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke-dasharray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;10,10&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;M5 40 l215 0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke-dasharray</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;20,10,5,5,5,10&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;M5 60 l215 0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;water&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">svg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="svg沿路径移动特效" tabindex="-1"><a class="header-anchor" href="#svg沿路径移动特效"><span>SVG沿路径移动特效</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">svg</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> viewBox</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0 0 200 100&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://www.w3.org/2000/svg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">path</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;none&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> stroke</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lightgrey&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    d</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">circle</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;5&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> fill</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;red&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">animateMotion</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> dur</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;10s&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> repeatCount</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;indefinite&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      path</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">circle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">svg</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,104)]))}const r=i(l,[["render",h]]),k=JSON.parse('{"path":"/web/css/css.html","title":"CSS相关","lang":"zh-CN","frontmatter":{"title":"CSS相关","icon":"gears","order":4,"category":["web"],"tag":["js"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"css总结 1.div上下布局 2.div虚线边框 3.flex布局 1、flex-direction属性 flex-direction属性决定主轴的方向（即项目的排列方向）。 2、flex-wrap属性 默认情况下，项目都排在一条线（又称\\"轴线\\"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 nowrap（默认）：不换行。 wrap...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS相关\\",\\"image\\":[\\"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/svgpath2.png\\",\\"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/rect2path.png\\",\\"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/ellipse2path.png\\"],\\"dateModified\\":\\"2024-07-02T10:18:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/web/css/css.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"CSS相关"}],["meta",{"property":"og:description","content":"css总结 1.div上下布局 2.div虚线边框 3.flex布局 1、flex-direction属性 flex-direction属性决定主轴的方向（即项目的排列方向）。 2、flex-wrap属性 默认情况下，项目都排在一条线（又称\\"轴线\\"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 nowrap（默认）：不换行。 wrap..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/svgpath2.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-02T10:18:56.000Z"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:modified_time","content":"2024-07-02T10:18:56.000Z"}]]},"git":{"createdTime":1719915536000,"updatedTime":1719915536000,"contributors":[{"name":"sola-grj","username":"sola-grj","email":"1131631886@qq.com","commits":1,"url":"https://github.com/sola-grj"}]},"readingTime":{"minutes":10.26,"words":3078},"filePathRelative":"web/css/css.md","excerpt":"\\n<h2>1.div上下布局</h2>\\n<div class=\\"language-css line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"css\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">.zj</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  width: </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">100</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">%</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  height: </span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">40</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">%</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  display: </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#D19A66\\">flex</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  flex-direction: </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#D19A66\\">column</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">;</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,k as data};
