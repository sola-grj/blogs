import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,a as n,e as s,b as t,d as e}from"./app-tdQwJvOh.js";const l={},u=n("p",null,[n("strong",null,"为什么要介绍 RxJs 应为 在 Nestjs 已经内置了 RxJs 无需安装 并且 Nestjs 也会有一些基于 Rxjs 提供的 API")],-1),r=n("figure",null,[n("img",{src:"https://i-blog.csdnimg.cn/blog_migrate/bad96c04b0ce037e41833288d41356b5.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),k={href:"https://cn.rx.js.org/class/es6/Observable.js~Observable.html",title:"Observable | RxJS 中文文档",target:"_blank",rel:"noopener noreferrer"},d=n("h4",{id:"概念",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#概念"},[n("span",null,"概念")])],-1),b={href:"https://so.csdn.net/so/search?q=%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},m={href:"https://so.csdn.net/so/search?q=Observable&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},v=e(`<p>Subscription 监听 Observable</p><p>Operators 纯函数可以处理管道的数据 如 map filter concat reduce 等</p><h4 id="案例" tabindex="-1"><a class="header-anchor" href="#案例"><span>案例</span></a></h4><p>类似于迭代器 next 发出通知  complete 通知完成</p><p>subscribe 订阅   observable  发出的通知 也就是一个观察者</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Observable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs&quot;</span><span class="token punctuation">;</span>

<span class="token comment">//类似于迭代器 next 发出通知 complete通知完成</span>

<span class="token keyword">const</span> observable <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Observable</span><span class="token punctuation">(</span><span class="token punctuation">(</span>subscriber<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    subscriber<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    subscriber<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

observable<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">next</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>案例 2</p><p>interval 五百毫秒执行一次 pipe 就是管道的意思 管道里面也是可以去掉接口的支持处理异步数据 去处理数据 这儿展示 了 map  和 filter 跟数组的方法是一样的   最后 通过观察者   subscribe 接受回调</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Observable<span class="token punctuation">,</span> interval<span class="token punctuation">,</span> take <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> filter<span class="token punctuation">,</span> reduce<span class="token punctuation">,</span> find<span class="token punctuation">,</span> findIndex <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs/operators&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> subs <span class="token operator">=</span> <span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>
    <span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> num<span class="token operator">:</span> v <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> v<span class="token punctuation">.</span>num <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>num <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      subs<span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://i-blog.csdnimg.cn/blog_migrate/76a1cf62176d19ba1e8f08f8a5310dde.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>案例 3</p>`,11),g={href:"https://so.csdn.net/so/search?q=Nestjs&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},f=e(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Observable<span class="token punctuation">,</span> interval<span class="token punctuation">,</span> take<span class="token punctuation">,</span> <span class="token keyword">of</span><span class="token punctuation">,</span> retry<span class="token punctuation">,</span> fromEvent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> map<span class="token punctuation">,</span> filter<span class="token punctuation">,</span> reduce<span class="token punctuation">,</span> find<span class="token punctuation">,</span> findIndex <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;rxjs/operators&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> dom <span class="token operator">=</span> <span class="token function">fromEvent</span><span class="token punctuation">(</span>document<span class="token punctuation">,</span> <span class="token string">&quot;click&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">.</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

dom<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function x(h,_){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,r,n("p",null,[s("Rxjs 中文文档"),n("a",k,[s("Observable | RxJS 中文文档"),t(a)])]),d,n("p",null,[s("RxJs 使用的是"),n("a",b,[s("观察者模式"),t(a)]),s("，用来编写异步队列和事件处理。")]),n("p",null,[n("a",m,[s("Observable"),t(a)]),s(" 可观察的物件")]),v,n("p",null,[s("Rxjs 也可以处理事件 不过我们在"),n("a",g,[s("Nestjs"),t(a)]),s(" 里面就不用操作 DOM 了 你如果 Angular 或则 Vue 框架看可以使用   fromEvent")]),f])}const R=p(l,[["render",x],["__file","rxjs.html.vue"]]),O=JSON.parse('{"path":"/node/nestjs/rxjs.html","title":"rxjs","lang":"zh-CN","frontmatter":{"title":"rxjs","icon":"gears","order":4,"category":["node"],"tag":["nestjs"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"为什么要介绍 RxJs 应为 在 Nestjs 已经内置了 RxJs 无需安装 并且 Nestjs 也会有一些基于 Rxjs 提供的 API Rxjs 中文文档Observable | RxJS 中文文档 概念 RxJs 使用的是观察者模式，用来编写异步队列和事件处理。 Observable 可观察的物件 Subscription 监听 Observa...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/node/nestjs/rxjs.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"rxjs"}],["meta",{"property":"og:description","content":"为什么要介绍 RxJs 应为 在 Nestjs 已经内置了 RxJs 无需安装 并且 Nestjs 也会有一些基于 Rxjs 提供的 API Rxjs 中文文档Observable | RxJS 中文文档 概念 RxJs 使用的是观察者模式，用来编写异步队列和事件处理。 Observable 可观察的物件 Subscription 监听 Observa..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://i-blog.csdnimg.cn/blog_migrate/bad96c04b0ce037e41833288d41356b5.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-09T09:39:48.000Z"}],["meta",{"property":"article:author","content":"孜然地球"}],["meta",{"property":"article:tag","content":"nestjs"}],["meta",{"property":"article:modified_time","content":"2025-01-09T09:39:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"rxjs\\",\\"image\\":[\\"https://i-blog.csdnimg.cn/blog_migrate/bad96c04b0ce037e41833288d41356b5.png\\",\\"https://i-blog.csdnimg.cn/blog_migrate/76a1cf62176d19ba1e8f08f8a5310dde.png\\"],\\"dateModified\\":\\"2025-01-09T09:39:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1736415588000,"updatedTime":1736415588000,"contributors":[{"name":"garry","email":"Garryg@ecinnovations.com","commits":1}]},"readingTime":{"minutes":1.48,"words":444},"filePathRelative":"node/nestjs/rxjs.md","localizedDate":"2025年1月9日","excerpt":"<p><strong>为什么要介绍 RxJs 应为 在 Nestjs 已经内置了 RxJs 无需安装 并且 Nestjs 也会有一些基于 Rxjs 提供的 API</strong></p>\\n<figure><img src=\\"https://i-blog.csdnimg.cn/blog_migrate/bad96c04b0ce037e41833288d41356b5.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p>Rxjs 中文文档<a href=\\"https://cn.rx.js.org/class/es6/Observable.js~Observable.html\\" title=\\"Observable | RxJS 中文文档\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Observable | RxJS 中文文档</a></p>","autoDesc":true}');export{R as comp,O as data};
