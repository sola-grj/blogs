import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,a as s,e as n,b as e,d as t}from"./app-tdQwJvOh.js";const l="/blogs/assets/images/node/nestjs/3.png",r="/blogs/assets/images/node/nestjs/4.png",u={},d=t(`<h3 id="通过-cli-创建-nestjs-项目" tabindex="-1"><a class="header-anchor" href="#通过-cli-创建-nestjs-项目"><span>通过 cli 创建 nestjs 项目</span></a></h3><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code>npm i -g @nestjs/cli
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code>nest <span class="token keyword">new</span> <span class="token punctuation">[</span>项目名称<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),k={href:"https://so.csdn.net/so/search?q=%E7%83%AD%E6%9B%B4%E6%96%B0&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},v=t(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token string">&quot;start&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;nest start&quot;</span><span class="token punctuation">,</span>

<span class="token string">&quot;start:dev&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;nest start --watch&quot;</span><span class="token punctuation">,</span>

<span class="token string">&quot;start:debug&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;nest start --debug --watch&quot;</span><span class="token punctuation">,</span>

<span class="token string">&quot;start:prod&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;node dist/main&quot;</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="目录介绍" tabindex="-1"><a class="header-anchor" href="#目录介绍"><span>目录介绍</span></a></h3><p>1.main.ts 入口文件主文件 类似于 vue 的 main.ts</p><p>通过  NestFactory.create(AppModule) 创建一个 app  就是类似于绑定一个根组件 App.vue</p><p>app.listen(3000); 监听一个端口</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> NestFactory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/core&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> AppModule <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./app.module&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">await</span> NestFactory<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>AppModule<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">bootstrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.Controller.ts 控制器</p><p>你可以理解成 vue 的路由</p>`,8),m={href:"https://so.csdn.net/so/search?q=%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> AppService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./app.service&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppController</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">readonly</span> appService<span class="token operator">:</span> AppService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>appService<span class="token punctuation">.</span><span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> Controller<span class="token punctuation">,</span> Get <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> AppService <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./app.service&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Controller</span></span><span class="token punctuation">(</span><span class="token string">&quot;/get&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppController</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token keyword">private</span> <span class="token keyword">readonly</span> appService<span class="token operator">:</span> AppService<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Get</span></span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
  <span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>appService<span class="token punctuation">.</span><span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+l+`" alt="hello world" tabindex="0" loading="lazy"><figcaption>hello world</figcaption></figure><p>3.app.service.ts</p><p>这个文件主要实现业务逻辑的 当然 Controller 可以实现逻辑，但是就是单一的无法复用，放到 app.service 有别的模块也需要就可以实现复用</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Injectable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token decorator"><span class="token at operator">@</span><span class="token function">Injectable</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">AppService</span> <span class="token punctuation">{</span>
  <span class="token function">getHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;Hello World!&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cli-常用命令" tabindex="-1"><a class="header-anchor" href="#cli-常用命令"><span>cli 常用命令</span></a></h3><h4 id="nest-help-可以查看-nestjs-所有的命令" tabindex="-1"><a class="header-anchor" href="#nest-help-可以查看-nestjs-所有的命令"><span>nest --help 可以查看 nestjs 所有的命令</span></a></h4>`,7),g={href:"https://so.csdn.net/so/search?q=angular&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},b=s("img",{src:r,alt:"hello world",loading:"lazy"},null,-1),y=t(`<p>案例生成一个用户模块</p><h4 id="_1-生成-controller-ts" tabindex="-1"><a class="header-anchor" href="#_1-生成-controller-ts"><span>1.生成 controller.ts</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nest g co user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-生成-module-ts" tabindex="-1"><a class="header-anchor" href="#_2-生成-module-ts"><span>2.生成   module.ts</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nest g mo user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3-生成-service-ts" tabindex="-1"><a class="header-anchor" href="#_3-生成-service-ts"><span>3.生成 service.ts</span></a></h4><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nest g s user
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),f={id:"以上步骤一个一个生成的太慢了我们可以直接使用一个命令生成curd",tabindex:"-1"},_={class:"header-anchor",href:"#以上步骤一个一个生成的太慢了我们可以直接使用一个命令生成curd"},w={href:"https://so.csdn.net/so/search?q=CURD&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},j=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[s("pre",{class:"language-bash"},[s("code",null,` nest g resource user
`)]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"})])],-1),q=s("p",null,[n("第一次使用这个命令的时候，除了生成文件之外还会自动使用  "),s("code",null,"npm"),n("  帮我们更新资源，安装一些额外的插件，后续再次使用就不会更新了。")],-1);function x(A,S){const a=o("ExternalLinkIcon");return c(),i("div",null,[d,s("p",null,[n("启动项目 我们需要"),s("a",k,[n("热更新"),e(a)]),n(" 就启动 npm run start:dev 就可以了")]),v,s("p",null,[n("private readonly appService: AppService 这一行代码就是"),s("a",m,[n("依赖注入"),e(a)]),n("不需要实例化   appService 它内部会自己实例化的我们主需要放上去就可以了")]),h,s("p",null,[n("他的命令和"),s("a",g,[n("angular"),e(a)]),n("很像 "),b]),y,s("h4",f,[s("a",_,[s("span",null,[n("以上步骤一个一个生成的太慢了我们可以直接使用一个命令生成"),s("a",w,[n("CURD"),e(a)])])])]),j,q])}const E=p(u,[["render",x],["__file","nestjs cli.html.vue"]]),B=JSON.parse('{"path":"/node/nestjs/nestjs%20cli.html","title":"nestjs cli","lang":"zh-CN","frontmatter":{"title":"nestjs cli","icon":"gears","order":4,"category":["node"],"tag":["nestjs"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"通过 cli 创建 nestjs 项目 启动项目 我们需要热更新 就启动 npm run start:dev 就可以了 目录介绍 1.main.ts 入口文件主文件 类似于 vue 的 main.ts 通过 NestFactory.create(AppModule) 创建一个 app 就是类似于绑定一个根组件 App.vue app.listen(30...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/node/nestjs/nestjs%20cli.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"nestjs cli"}],["meta",{"property":"og:description","content":"通过 cli 创建 nestjs 项目 启动项目 我们需要热更新 就启动 npm run start:dev 就可以了 目录介绍 1.main.ts 入口文件主文件 类似于 vue 的 main.ts 通过 NestFactory.create(AppModule) 创建一个 app 就是类似于绑定一个根组件 App.vue app.listen(30..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/blogs/assets/images/node/nestjs/3.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-03T10:01:26.000Z"}],["meta",{"property":"article:author","content":"孜然地球"}],["meta",{"property":"article:tag","content":"nestjs"}],["meta",{"property":"article:modified_time","content":"2025-01-03T10:01:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nestjs cli\\",\\"image\\":[\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/3.png\\",\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/4.png\\"],\\"dateModified\\":\\"2025-01-03T10:01:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":3,"title":"通过 cli 创建 nestjs 项目","slug":"通过-cli-创建-nestjs-项目","link":"#通过-cli-创建-nestjs-项目","children":[]},{"level":3,"title":"目录介绍","slug":"目录介绍","link":"#目录介绍","children":[]},{"level":3,"title":"cli 常用命令","slug":"cli-常用命令","link":"#cli-常用命令","children":[]}],"git":{"createdTime":1735898486000,"updatedTime":1735898486000,"contributors":[{"name":"garry","email":"Garryg@ecinnovations.com","commits":1}]},"readingTime":{"minutes":1.79,"words":538},"filePathRelative":"node/nestjs/nestjs cli.md","localizedDate":"2025年1月3日","excerpt":"<h3>通过 cli 创建 nestjs 项目</h3>\\n<div class=\\"language-css\\" data-ext=\\"css\\" data-title=\\"css\\"><pre class=\\"language-css\\"><code>npm i -g @nestjs/cli\\n</code></pre></div><div class=\\"language-csharp\\" data-ext=\\"cs\\" data-title=\\"cs\\"><pre class=\\"language-csharp\\"><code>nest <span class=\\"token keyword\\">new</span> <span class=\\"token punctuation\\">[</span>项目名称<span class=\\"token punctuation\\">]</span>\\n</code></pre></div>","autoDesc":true}');export{E as comp,B as data};
