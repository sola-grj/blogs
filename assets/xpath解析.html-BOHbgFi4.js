import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,d as e,o as l}from"./app-BCMx_cTT.js";const a={};function h(n,i){return l(),s("div",null,i[0]||(i[0]=[e(`<h1 id="xpath" tabindex="-1"><a class="header-anchor" href="#xpath"><span>xpath</span></a></h1><h3 id="_1、xpath安装与使用" tabindex="-1"><a class="header-anchor" href="#_1、xpath安装与使用"><span>1、xpath安装与使用</span></a></h3><p><strong>安装</strong></p><ul><li><p>安装lxml库</p><p>pip install lxml -i pip源</p></li></ul><h3 id="_2、解析流程与使用" tabindex="-1"><a class="header-anchor" href="#_2、解析流程与使用"><span>2、解析流程与使用</span></a></h3><p><strong>解析流程</strong></p><ul><li>实例化一个etree的对象，把即将被解析的页面源码加载到该对象</li><li>调用该对象的xpath方法结合着不同形式的xpath表达进行标签定位和数据提取</li></ul><p><strong>使用</strong></p><ul><li><p>导入lxml.etree</p><p>from lxml import etree</p></li><li><p>etree.parse()</p><p>解析本地html文件</p><p>html_tree = etree.parse(&#39;XX.html&#39;)</p></li><li><p>etree.HTML()(建议)</p><p>解析网络的html字符串</p><p>html_tree = etree.HTML(html字符串)</p></li><li><p>html_tree.xpath()</p><p>使用xpath路径查询信息，返回一个列表</p></li></ul><p>注意：如果lxml解析本地HTML文件报错可以安装如下添加参数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">parser </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> etree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">HTMLParser</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;utf-8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">selector </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> etree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">parse</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;./lol_1.html&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">parser</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">parser)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">etree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">tostring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(selector)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、xpath语法" tabindex="-1"><a class="header-anchor" href="#_3、xpath语法"><span>3、xpath语法</span></a></h3><p>XPath 是一门在 XML 文档中查找信息的语言。XPath 用于在 XML 文档中通过元素和属性进行导航。</p><ul><li><p><strong>路径表达式</strong></p><table><thead><tr><th style="text-align:left;">表达式</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">/</td><td style="text-align:left;">从根节点选取。</td></tr><tr><td style="text-align:left;">//</td><td style="text-align:left;">从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置。</td></tr><tr><td style="text-align:left;">./</td><td style="text-align:left;">当前节点再次进行xpath</td></tr><tr><td style="text-align:left;">@</td><td style="text-align:left;">选取属性。</td></tr></tbody></table><p><strong>实例</strong></p><p>在下面的表格中，我们已列出了一些路径表达式以及表达式的结果：</p><table><thead><tr><th style="text-align:left;">路径表达式</th><th style="text-align:left;">结果</th></tr></thead><tbody><tr><td style="text-align:left;">/html</td><td style="text-align:left;">选取根元素。注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！</td></tr><tr><td style="text-align:left;">//li</td><td style="text-align:left;">选取所有li 子元素，而不管它们在文档中的位置。</td></tr><tr><td style="text-align:left;">//ul//li</td><td style="text-align:left;">选择属于 ul元素的后代的所有 li元素，而不管它们位于 ul之下的什么位置。</td></tr><tr><td style="text-align:left;">节点对象.xpath(&#39;./div&#39;)</td><td style="text-align:left;">选择当前节点对象里面的第一个div节点</td></tr><tr><td style="text-align:left;">//@href</td><td style="text-align:left;">选取名为 href 的所有属性。</td></tr></tbody></table></li><li><p><strong>谓语（Predicates）</strong></p><p>谓语用来查找某个特定的节点或者包含某个指定的值的节点。</p><p>谓语被嵌在方括号中。</p><p><strong>实例</strong></p><p>在下面的表格中，我们列出了带有谓语的一些路径表达式，以及表达式的结果：</p><table><thead><tr><th style="text-align:left;">路径表达式</th><th style="text-align:left;">结果</th></tr></thead><tbody><tr><td style="text-align:left;">/ul/li[1]</td><td style="text-align:left;">选取属于 ul子元素的第一个 li元素。</td></tr><tr><td style="text-align:left;">/ul/li[last()]</td><td style="text-align:left;">选取属于 ul子元素的最后一个 li元素。</td></tr><tr><td style="text-align:left;">/ul/li[last()-1]</td><td style="text-align:left;">选取属于 ul子元素的倒数第二个 li元素。</td></tr><tr><td style="text-align:left;">//ul/li[position()❤️]</td><td style="text-align:left;">选取最前面的两个属于 ul元素的子元素的 li元素。</td></tr><tr><td style="text-align:left;">//a[@title]</td><td style="text-align:left;">选取所有拥有名为 title的属性的 a元素。</td></tr><tr><td style="text-align:left;">//a[@title=&#39;xx&#39;]</td><td style="text-align:left;">选取所有 a元素，且这些元素拥有值为 xx的 title属性。</td></tr><tr><td style="text-align:left;">//a[@title&gt;10] <code>&gt; &lt; &gt;= &lt;= !=</code></td><td style="text-align:left;">选取 a元素的所有 title元素，且其中的 title元素的值须大于 10。</td></tr><tr><td style="text-align:left;">/bookstore/book[price&gt;35.00]/title</td><td style="text-align:left;">选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。</td></tr></tbody></table></li><li><p><strong>选取未知节点</strong></p><p>XPath 通配符可用来选取未知的 XML 元素。</p><table><thead><tr><th style="text-align:left;">通配符</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">*</td><td style="text-align:left;">匹配任何元素节点。 一般用于浏览器copy xpath会出现</td></tr><tr><td style="text-align:left;">@*</td><td style="text-align:left;">匹配任何属性节点。</td></tr><tr><td style="text-align:left;">node()</td><td style="text-align:left;">匹配任何类型的节点。</td></tr></tbody></table><p><strong>实例</strong></p><p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p><table><thead><tr><th style="text-align:left;">路径表达式</th><th style="text-align:left;">结果</th></tr></thead><tbody><tr><td style="text-align:left;">/ul/*</td><td style="text-align:left;">选取 ul元素的所有子元素。</td></tr><tr><td style="text-align:left;">//*</td><td style="text-align:left;">选取文档中的所有元素。</td></tr><tr><td style="text-align:left;">//title[@*]</td><td style="text-align:left;">选取所有带有属性的 title 元素。</td></tr><tr><td style="text-align:left;">//node()</td><td style="text-align:left;">获取所有节点</td></tr></tbody></table><p><strong>选取若干路径</strong></p><p>通过在路径表达式中使用“|”运算符，您可以选取若干个路径。</p><p><strong>实例</strong></p><p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p><table><thead><tr><th style="text-align:left;">路径表达式</th><th style="text-align:left;">结果</th></tr></thead><tbody><tr><td style="text-align:left;">//book/title | //book/price</td><td style="text-align:left;">选取 book 元素的所有 title 和 price 元素。</td></tr><tr><td style="text-align:left;">//title | //price</td><td style="text-align:left;">选取文档中的所有 title 和 price 元素。</td></tr><tr><td style="text-align:left;">/bookstore/book/title | //price</td><td style="text-align:left;">选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素。</td></tr></tbody></table></li><li><p>逻辑运算</p><ul><li><p>查找所有id属性等于head并且class属性等于s_down的div标签</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">div[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;head&quot;</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> and</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> @</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;s_down&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>选取文档中的所有 title 和 price 元素。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">title </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">|</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> //</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">price</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>注意: “|”两边必须是完整的xpath路径</p></li></ul></li><li><p>属性查询</p><ul><li><p>查找所有包含id属性的div节点</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">div[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查找所有id属性等于maincontent的div标签</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">div[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;maincontent&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查找所有的class属性</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>//@attrName</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">li[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">@</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">name=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取li标签name为xx的里面的文本内容</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li><p>获取第几个标签 索引从1开始</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">xpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;//li[1]/a/text()&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取第一个</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">xpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;//li[last()]/a/text()&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取最后一个</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">tree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">xpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;//li[last()-1]/a/text()&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 获取倒数第二个</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>模糊查询</p><ul><li><p>查询所有id属性中包含he的div标签</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">div[</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">contains</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;he&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>查询所有id属性中包以he开头的div标签</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">div[starts</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">with</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">@</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;he&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li><p>内容查询</p><p>查找所有div标签下的直接子节点h1的内容</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>属性值获取</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">div</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">a</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/@</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">href   获取a里面的href属性值</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>获取所有</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//*</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  #获取所有</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">//*</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;xx&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#获取所有class为xx的标签</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>获取节点内容转换成字符串</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">c </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> tree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">xpath</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;//li/a&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">etree.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">tostring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(c, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">encoding</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;utf-8&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(result.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">decode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;UTF-8&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul>`,14)]))}const k=t(a,[["render",h]]),d=JSON.parse(`{"path":"/python/spider/xpath%E8%A7%A3%E6%9E%90.html","title":"xpath解析","lang":"zh-CN","frontmatter":{"title":"xpath解析","icon":"gears","order":4,"category":["python"],"tag":["正则表达式"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"xpath 1、xpath安装与使用 安装 安装lxml库 pip install lxml -i pip源 2、解析流程与使用 解析流程 实例化一个etree的对象，把即将被解析的页面源码加载到该对象 调用该对象的xpath方法结合着不同形式的xpath表达进行标签定位和数据提取 使用 导入lxml.etree from lxml import et...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"xpath解析\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-20T09:01:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/python/spider/xpath%E8%A7%A3%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"xpath解析"}],["meta",{"property":"og:description","content":"xpath 1、xpath安装与使用 安装 安装lxml库 pip install lxml -i pip源 2、解析流程与使用 解析流程 实例化一个etree的对象，把即将被解析的页面源码加载到该对象 调用该对象的xpath方法结合着不同形式的xpath表达进行标签定位和数据提取 使用 导入lxml.etree from lxml import et..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-20T09:01:53.000Z"}],["meta",{"property":"article:tag","content":"正则表达式"}],["meta",{"property":"article:modified_time","content":"2025-01-20T09:01:53.000Z"}]]},"git":{"createdTime":1737363713000,"updatedTime":1737363713000,"contributors":[{"name":"garry","username":"garry","email":"Garryg@ecinnovations.com","commits":1,"url":"https://github.com/garry"}]},"readingTime":{"minutes":4.43,"words":1330},"filePathRelative":"python/spider/xpath解析.md","excerpt":"\\n<h3>1、xpath安装与使用</h3>\\n<p><strong>安装</strong></p>\\n<ul>\\n<li>\\n<p>安装lxml库</p>\\n<p>pip install lxml  -i pip源</p>\\n</li>\\n</ul>\\n<h3>2、解析流程与使用</h3>\\n<p><strong>解析流程</strong></p>\\n<ul>\\n<li>实例化一个etree的对象，把即将被解析的页面源码加载到该对象</li>\\n<li>调用该对象的xpath方法结合着不同形式的xpath表达进行标签定位和数据提取</li>\\n</ul>\\n<p><strong>使用</strong></p>\\n<ul>\\n<li>\\n<p>导入lxml.etree</p>\\n<p>from lxml import etree</p>\\n</li>\\n<li>\\n<p>etree.parse()</p>\\n<p>解析本地html文件</p>\\n<p>html_tree = etree.parse('XX.html')</p>\\n</li>\\n<li>\\n<p>etree.HTML()(建议)</p>\\n<p>解析网络的html字符串</p>\\n<p>html_tree = etree.HTML(html字符串)</p>\\n</li>\\n<li>\\n<p>html_tree.xpath()</p>\\n<p>使用xpath路径查询信息，返回一个列表</p>\\n</li>\\n</ul>","autoDesc":true}`);export{k as comp,d as data};
