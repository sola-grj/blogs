import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as p,c,a as n,e as s,b as t,d as r}from"./app-tdQwJvOh.js";const i="/blogs/assets/images/node/nestjs/44.png",l={},u={href:"https://so.csdn.net/so/search?q=Nestjs&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},d=n("ul",null,[n("li",null,"nest g d [name]")],-1),m={id:"案例-1-自定义权限装饰器",tabindex:"-1"},k={class:"header-anchor",href:"#案例-1-自定义权限装饰器"},g={href:"https://so.csdn.net/so/search?q=%E8%A3%85%E9%A5%B0%E5%99%A8&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},v=r(`<p>生成装饰器</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nest g d <span class="token punctuation">[</span>name<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> SetMetadata <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Role</span> <span class="token operator">=</span> <span class="token punctuation">(</span>role<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>role<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token function">SetMetadata</span><span class="token punctuation">(</span><span class="token string">&quot;role&quot;</span><span class="token punctuation">,</span> role<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+i+`" alt="管道" tabindex="0" loading="lazy"><figcaption>管道</figcaption></figure><h4 id="案例-2-自定义参数装饰器返回一个-url" tabindex="-1"><a class="header-anchor" href="#案例-2-自定义参数装饰器返回一个-url"><span>案例 2 自定义参数装饰器返回一个 url</span></a></h4><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span>
  SetMetadata<span class="token punctuation">,</span>
  createParamDecorator<span class="token punctuation">,</span>
  ExecutionContext<span class="token punctuation">,</span>
  applyDecorators<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@nestjs/common&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> Request <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;express&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> ReqUrl <span class="token operator">=</span> <span class="token function">createParamDecorator</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span>data<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> ctx<span class="token operator">:</span> ExecutionContext<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> req <span class="token operator">=</span> ctx<span class="token punctuation">.</span><span class="token function">switchToHttp</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token generic-function"><span class="token function">getRequest</span><span class="token generic class-name"><span class="token operator">&lt;</span>Request<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> req<span class="token punctuation">.</span>url<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function h(b,_){const a=o("ExternalLinkIcon");return p(),c("div",null,[n("p",null,[s("在"),n("a",u,[s("Nestjs"),t(a)]),s(" 中我们使用了大量装饰器 decorator ，所以 Nestjs 也允许我们去自定义装饰器。")]),d,n("h4",m,[n("a",k,[n("span",null,[s("案例 1 自定义权限"),n("a",g,[s("装饰器"),t(a)])])])]),v])}const j=e(l,[["render",h],["__file","nestjs 自定义装饰器.html.vue"]]),E=JSON.parse('{"path":"/node/nestjs/nestjs%20%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A3%85%E9%A5%B0%E5%99%A8.html","title":"nestjs 自定义装饰器","lang":"zh-CN","frontmatter":{"title":"nestjs 自定义装饰器","icon":"gears","order":4,"category":["node"],"tag":["nestjs"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"在Nestjs 中我们使用了大量装饰器 decorator ，所以 Nestjs 也允许我们去自定义装饰器。 nest g d [name] 案例 1 自定义权限装饰器 生成装饰器 管道管道 案例 2 自定义参数装饰器返回一个 url","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/node/nestjs/nestjs%20%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A3%85%E9%A5%B0%E5%99%A8.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"nestjs 自定义装饰器"}],["meta",{"property":"og:description","content":"在Nestjs 中我们使用了大量装饰器 decorator ，所以 Nestjs 也允许我们去自定义装饰器。 nest g d [name] 案例 1 自定义权限装饰器 生成装饰器 管道管道 案例 2 自定义参数装饰器返回一个 url"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/blogs/assets/images/node/nestjs/44.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-13T07:14:15.000Z"}],["meta",{"property":"article:author","content":"孜然地球"}],["meta",{"property":"article:tag","content":"nestjs"}],["meta",{"property":"article:modified_time","content":"2025-01-13T07:14:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nestjs 自定义装饰器\\",\\"image\\":[\\"https://mister-hope.github.io/blogs/assets/images/node/nestjs/44.png\\"],\\"dateModified\\":\\"2025-01-13T07:14:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[],"git":{"createdTime":1736752455000,"updatedTime":1736752455000,"contributors":[{"name":"garry","email":"Garryg@ecinnovations.com","commits":1}]},"readingTime":{"minutes":0.59,"words":178},"filePathRelative":"node/nestjs/nestjs 自定义装饰器.md","localizedDate":"2025年1月13日","excerpt":"<p>在<a href=\\"https://so.csdn.net/so/search?q=Nestjs&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Nestjs</a> 中我们使用了大量装饰器 decorator ，所以 Nestjs 也允许我们去自定义装饰器。</p>\\n<ul>\\n<li>nest g d [name]</li>\\n</ul>\\n<h4><a class=\\"header-anchor\\" href=\\"#案例-1-自定义权限装饰器\\"><span>案例 1 自定义权限</span></a><a href=\\"https://so.csdn.net/so/search?q=%E8%A3%85%E9%A5%B0%E5%99%A8&amp;spm=1001.2101.3001.7020\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">装饰器</a></h4>","autoDesc":true}');export{j as comp,E as data};
