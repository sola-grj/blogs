import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as c,o as i,c as o,a as s,e as n,b as e,d as t}from"./app-DwEIf6KW.js";const p={},u=t(`<h1 id="css总结" tabindex="-1"><a class="header-anchor" href="#css总结"><span>css总结</span></a></h1><h2 id="_1-div上下布局" tabindex="-1"><a class="header-anchor" href="#_1-div上下布局"><span>1.div上下布局</span></a></h2><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.zj</span>  <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 40%<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-div虚线边框" tabindex="-1"><a class="header-anchor" href="#_2-div虚线边框"><span>2.div虚线边框</span></a></h2><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token property">border-top</span><span class="token punctuation">:</span> 3px dashed #ffffff<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-flex布局" tabindex="-1"><a class="header-anchor" href="#_3-flex布局"><span>3.flex布局</span></a></h2><h3 id="_1、flex-direction属性" tabindex="-1"><a class="header-anchor" href="#_1、flex-direction属性"><span>1、flex-direction属性</span></a></h3><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span> <span class="token property">flex-direction</span><span class="token punctuation">:</span> row | row-reverse | column | column-reverse<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、flex-wrap属性" tabindex="-1"><a class="header-anchor" href="#_2、flex-wrap属性"><span>2、flex-wrap属性</span></a></h3><p>默认情况下，项目都排在一条线（又称&quot;轴线&quot;）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box</span><span class="token punctuation">{</span> <span class="token property">flex-wrap</span><span class="token punctuation">:</span> nowrap | wrap | wrap-reverse<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>nowrap（默认）：不换行。</li><li>wrap：换行，第一行在上方。</li><li>wrap-reverse：换行，第一行在下方。</li></ul><h3 id="_3、flex-flow" tabindex="-1"><a class="header-anchor" href="#_3、flex-flow"><span>3、flex-flow</span></a></h3><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span> <span class="token property">flex-flow</span><span class="token punctuation">:</span> &lt;flex-direction&gt; || &lt;flex-wrap&gt;<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4、justify-content属性" tabindex="-1"><a class="header-anchor" href="#_4、justify-content属性"><span>4、justify-content属性</span></a></h3><p>justify-content属性定义了项目在主轴上的对齐方式。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span> <span class="token property">justify-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>flex-start（默认值）：左对齐</li><li>flex-end：右对齐</li><li>center： 居中</li><li>space-between：两端对齐，项目之间的间隔都相等。</li><li>space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</li></ul><h3 id="_5、align-items属性" tabindex="-1"><a class="header-anchor" href="#_5、align-items属性"><span>5、align-items属性</span></a></h3><p>align-items属性定义项目在交叉轴上如何对齐。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span> <span class="token property">align-items</span><span class="token punctuation">:</span> flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li>center：交叉轴的中点对齐。</li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><h3 id="_6、align-content属性" tabindex="-1"><a class="header-anchor" href="#_6、align-content属性"><span>6、align-content属性</span></a></h3><p>align-content属性定义了多根轴线（多行）的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span> <span class="token property">align-content</span><span class="token punctuation">:</span> flex-start | flex-end | center | space-between | space-around | stretch<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：与交叉轴的终点对齐。</li><li>center：与交叉轴的中点对齐。</li><li>space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li>space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</li><li>stretch（默认值）：轴线占满整个交叉轴。</li></ul><h2 id="_4-项目的属性" tabindex="-1"><a class="header-anchor" href="#_4-项目的属性"><span>4.项目的属性</span></a></h2><h3 id="_1、order属性" tabindex="-1"><a class="header-anchor" href="#_1、order属性"><span>1、order属性</span></a></h3><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span> <span class="token property">order</span><span class="token punctuation">:</span> &lt;integer&gt;<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2、flex-grow属性" tabindex="-1"><a class="header-anchor" href="#_2、flex-grow属性"><span>2、flex-grow属性</span></a></h3><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span> <span class="token property">flex-grow</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 0 */</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3、flex-shrink" tabindex="-1"><a class="header-anchor" href="#_3、flex-shrink"><span>3、flex-shrink</span></a></h3><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。 负值对该属性无效。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span> <span class="token property">flex-shrink</span><span class="token punctuation">:</span> &lt;number&gt;<span class="token punctuation">;</span> <span class="token comment">/* default 1 */</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_4、flex-basis属性" tabindex="-1"><a class="header-anchor" href="#_4、flex-basis属性"><span>4、flex-basis属性</span></a></h3><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span> <span class="token property">flex-basis</span><span class="token punctuation">:</span> &lt;length&gt;<span class="token punctuation">;</span> | auto<span class="token punctuation">;</span> <span class="token comment">/* default auto */</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5、flex属性" tabindex="-1"><a class="header-anchor" href="#_5、flex属性"><span>5、flex属性</span></a></h3><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span> <span class="token property">flex</span><span class="token punctuation">:</span> none | [ &lt;<span class="token string">&#39;flex-grow&#39;</span>&gt; &lt;<span class="token string">&#39;flex-shrink&#39;</span>&gt;? || &lt;<span class="token string">&#39;flex-basis&#39;</span>&gt; ] <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_6、align-self属性" tabindex="-1"><a class="header-anchor" href="#_6、align-self属性"><span>6、align-self属性</span></a></h3><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.item</span> <span class="token punctuation">{</span> <span class="token property">align-self</span><span class="token punctuation">:</span> auto | flex-start | flex-end | center | baseline | stretch<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-svg" tabindex="-1"><a class="header-anchor" href="#_5-svg"><span>5.svg</span></a></h2>`,51),d=s("code",null,"rect",-1),r=s("code",null,"circle",-1),v=s("code",null,"ellipse",-1),k=s("code",null,"line",-1),h=s("code",null,"polyline",-1),g=s("code",null,"polygon",-1),m={href:"https://www.w3cplus.com/svg/svg-basic-shapes.html",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.w3cplus.com/svg/svg-path.html",target:"_blank",rel:"noopener noreferrer"},b=s("code",null,"path",-1),f=s("code",null,"path",-1),y=s("code",null,"stroke-dasharray",-1),q=s("code",null,"stroke-dashoffset",-1),_=s("code",null,"path",-1),w=s("h2",{id:"svg基本形状",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#svg基本形状"},[s("span",null,"SVG基本形状")])],-1),S=s("code",null,"rect",-1),V=s("code",null,"circle",-1),M=s("code",null,"ellipse",-1),j=s("code",null,"line",-1),G=s("code",null,"polyline",-1),z=s("code",null,"polygon",-1),C={href:"https://www.w3cplus.com/svg/svg-basic-shapes.html",target:"_blank",rel:"noopener noreferrer"},N=s("code",null,"path",-1),L=t('<h3 id="rect-矩形" tabindex="-1"><a class="header-anchor" href="#rect-矩形"><span><code>rect</code> 矩形</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;rect x=&quot;10&quot; y=&quot;10&quot; width=&quot;30&quot; height=&quot;30&quot;/&gt;\n&lt;rect x=&quot;60&quot; y=&quot;10&quot; rx=&quot;10&quot; ry=&quot;10&quot; width=&quot;30&quot; height=&quot;30&quot;/&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>SVG中<code>rect</code>元素用于绘制矩形、圆角矩形，含有<code>6</code>个基本属性用于控制矩形的形状以及坐标，具体如下：</p><ul><li><code>x</code>：矩形左上角<code>x</code>位置, 默认值为 <code>0</code></li><li><code>y</code>：矩形左上角<code>y</code>位置, 默认值为 <code>0</code></li><li><code>width</code>：矩形的宽度, 不能为负值否则报错, <code>0</code> 值不绘制</li><li><code>height</code>：矩形的高度, 不能为负值否则报错, <code>0</code> 值不绘制</li><li><code>rx</code>：圆角<code>x</code>方向半径, 不能为负值否则报错</li><li><code>ry</code>：圆角<code>y</code>方向半径, 不能为负值否则报错</li></ul><p>这里需要注意，<code>rx</code> 和 <code>ry</code> 的还有如下规则：</p><ul><li><code>rx</code> 和 <code>ry</code> 都没有设置, 则 <code>rx = 0 ry = 0</code></li><li><code>rx</code> 和 <code>ry</code> 有一个值为0, 则相当于 <code>rx = 0 ry = 0</code>，圆角无效</li><li><code>rx</code> 和 <code>ry</code> 有一个被设置, 则全部取这个被设置的值</li><li><code>rx</code> 的最大值为 <code>width</code> 的一半, <code>ry</code> 的最大值为 <code>height</code> 的一半</li></ul><h3 id="circle-圆形" tabindex="-1"><a class="header-anchor" href="#circle-圆形"><span><code>circle</code> 圆形</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;circle cx=&quot;100&quot; cy=&quot;100&quot; r=&quot;50&quot; fill=&quot;#fff&quot;&gt;&lt;/circle&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SVG中<code>circle</code>元素用于绘制圆形，含有3个基本属性用于控制圆形的坐标以及半径，具体如下：</p><ul><li><code>r</code>：半径</li><li><code>cx</code>：圆心<code>x</code>位置, 默认为 <code>0</code></li><li><code>cy</code>：圆心<code>y</code>位置, 默认为 <code>0</code></li></ul><h3 id="ellipse-椭圆" tabindex="-1"><a class="header-anchor" href="#ellipse-椭圆"><span><code>ellipse</code> 椭圆</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;ellipse cx=&quot;75&quot; cy=&quot;75&quot; rx=&quot;20&quot; ry=&quot;5&quot;/&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>SVG中<code>ellipse</code>元素用于绘制椭圆，是<code>circle</code>元素更通用的形式，含有<code>4</code>个基本属性用于控制椭圆的形状以及坐标，具体如下：</p><ul><li><code>rx</code>：椭圆<code>x</code>半径</li><li><code>ry</code>：椭圆<code>y</code>半径</li><li><code>cx</code>：圆心<code>x</code>位置, 默认为 <code>0</code></li><li><code>cy</code>：圆心<code>y</code>位置, 默认为 <code>0</code></li></ul><h3 id="line-直线" tabindex="-1"><a class="header-anchor" href="#line-直线"><span><code>line</code> 直线</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;line x1=&quot;10&quot; x2=&quot;50&quot; y1=&quot;110&quot; y2=&quot;150&quot;/&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>line</code>绘制直线。它取两个点的位置作为属性，指定这条线的起点和终点位置。</p><ul><li><code>x1</code>：起点的<code>x</code>位置</li><li><code>y1</code>：起点的<code>y</code>位置</li><li><code>x2</code>：终点的<code>x</code>位置</li><li><code>y2</code>：终点的<code>y</code>位置</li></ul><h3 id="polyline-折线" tabindex="-1"><a class="header-anchor" href="#polyline-折线"><span><code>polyline</code> 折线</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;polyline points=&quot;60 110, 65 120, 70 115, 75 130, 80 125, 85 140, 90 135, 95 150, 100 145&quot;/&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>polyline</code>是一组连接在一起的直线。因为它可以有很多的点，折线的的所有点位置都放在一个<code>points</code>属性中：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>points` 点集数列，每个数字用空白、逗号、终止命令符或者换行符分隔开，每个点必须包含`2`个数字，一个是`x`坐标，一个是`y`坐标 如`0 0, 1 1, 2 2\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="polygon-多边形" tabindex="-1"><a class="header-anchor" href="#polygon-多边形"><span><code>polygon</code> 多边形</span></a></h3><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>&lt;polygon points=&quot;50 160, 55 180, 70 180, 60 190, 65 205, 50 195, 35 205, 40 190, 30 180, 45 180&quot;/&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>polygon</code>和折线很像，它们都是由连接一组点集的直线构成。不同的是，<code>polygon</code>的路径在最后一个点处自动回到第一个点。需要注意的是，矩形也是一种多边形，如果需要更多灵活性的话，你也可以用多边形创建一个矩形。</p><p><code>points</code> 点集数列，每个数字用空白、逗号、终止命令符或者换行符分隔开，每个点必须包含<code>2</code>个数字，一个是<code>x</code>坐标，一个是<code>y</code>坐标 如<code>0 0, 1 1, 2 2</code>， 路径绘制完闭合图形”</p><h2 id="svg-path-路径" tabindex="-1"><a class="header-anchor" href="#svg-path-路径"><span>SVG path 路径</span></a></h2>',27),T={href:"https://www.w3cplus.com/svg/svg-path.html",target:"_blank",rel:"noopener noreferrer"},A=s("code",null,"<path>",-1),B=s("code",null,"<path>",-1),H=s("code",null,"d",-1),E=s("code",null,"d",-1),I=t(`<figure><img src="https://www.w3cplus.com/sites/default/files/blogs/2018/1801/svgpath2.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><p>通常大部分形状，都可以通过指令<code>M(m)</code>、<code>L(l)</code>、<code>H(h)</code>、<code>V(v)</code>、<code>A(a)</code>来实现，注意特别要区分大小写，相对与绝对坐标情况，转换时推荐使用相对路径可减少代码量，例如：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>// 以下两个等价
d=&#39;M 10 10 20 20&#39;     // (10, 10) (20 20) 都是绝对坐标
d=&#39;M 10 10 L 20 20&#39;

// 以下两个等价
d=&#39;m 10 10 20 20&#39;     // (10, 10) 绝对坐标, (20 20) 相对坐标
d=&#39;M 10 10 l 20 20&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="svg-基本形状路径转换原理" tabindex="-1"><a class="header-anchor" href="#svg-基本形状路径转换原理"><span>SVG 基本形状路径转换原理</span></a></h2><h3 id="rect-to-path" tabindex="-1"><a class="header-anchor" href="#rect-to-path"><span>rect to path</span></a></h3><p>如下图所示，一个 <code>rect</code> 是由 <code>4</code> 个弧和 <code>4</code> 个线段构成；如果 <code>rect</code> 没有设置 <code>rx</code> 和 <code>ry</code> 则 <code>rect</code> 只是由 <code>4</code> 个线段构成。<code>rect</code> 转换为 <code>path</code> 只需要将 <code>A ~ H</code> 之间的弧和线段依次实现即可。</p><figure><img src="https://www.w3cplus.com/sites/default/files/blogs/2018/1801/rect2path.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>function rect2path(x, y, width, height, rx, ry) {
    /*
    * rx 和 ry 的规则是：
    * 1. 如果其中一个设置为 0 则圆角不生效
    * 2. 如果有一个没有设置则取值为另一个
    */
    rx = rx || ry || 0;
    ry = ry || rx || 0;

    //非数值单位计算，如当宽度像100%则移除
    if (isNaN(x - y + width - height + rx - ry)) return;
    rx = rx &gt; width / 2 ? width / 2 : rx;
    ry = ry &gt; height / 2 ? height / 2 : ry;

    //如果其中一个设置为 0 则圆角不生效
    if(0 == rx || 0 == ry){
        // var path =
        //     &#39;M&#39; + x + &#39; &#39; + y +
        //     &#39;H&#39; + (x + width) +     不推荐用绝对路径，相对路径节省代码量
        //     &#39;V&#39; + (y + height) +
        //     &#39;H&#39; + x +
        //     &#39;z&#39;;
        var path =
            &#39;M&#39; + x + &#39; &#39; + y +
            &#39;h&#39; + width +
            &#39;v&#39; + height +
            &#39;h&#39; + -width +
            &#39;z&#39;;                
    }else{
        var path =
            &#39;M&#39; + x + &#39; &#39; + (y+ry) +
            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + rx + &#39; &#39; + (-ry) + 
            &#39;h&#39; + (width - rx - rx) +
            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + rx + &#39; &#39; + ry + 
            &#39;v&#39; + (height - ry -ry) +
            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + (-rx) + &#39; &#39; + ry + 
            &#39;h&#39; + (rx + rx -width) +
            &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 0 1 &#39; + (-rx) + &#39; &#39; + (-ry) + 
            &#39;z&#39;;        
    }
    return path;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="circle-ellipse-to-path" tabindex="-1"><a class="header-anchor" href="#circle-ellipse-to-path"><span>circle/ellipse to path</span></a></h3><p>圆可视为是一种特殊的椭圆，即 <code>rx</code> 与 <code>ry</code> 相等的椭圆，所以可以放在一起讨论。 椭圆可以看成<code>A</code>点到<code>C</code>做<code>180</code>度顺时针画弧、<code>C</code>点到<code>A</code>做<code>180</code>度顺时针画弧即可：</p><figure><img src="https://www.w3cplus.com/sites/default/files/blogs/2018/1801/ellipse2path.png" alt="img" tabindex="0" loading="lazy"><figcaption>img</figcaption></figure><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>function ellipse2path(cx, cy, rx, ry) {
    //非数值单位计算，如当宽度像100%则移除
    if (isNaN(cx - cy + rx - ry)) return;
    var path =
        &#39;M&#39; + (cx-rx) + &#39; &#39; + cy +
        &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 1 0 &#39; + 2*rx + &#39; 0&#39; +
        &#39;a&#39; + rx + &#39; &#39; + ry + &#39; 0 1 0 &#39; + (-2*rx) + &#39; 0&#39; +
        &#39;z&#39;; 
    return path;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="line-to-path" tabindex="-1"><a class="header-anchor" href="#line-to-path"><span>line to path</span></a></h3><p>相对来说比较简单，如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>function line2path(x1, y1, x2, y2) {
    //非数值单位计算，如当宽度像100%则移除
    if (isNaN(x1 - y1 + x2 - y2)) return; 

    x1 = x1 || 0;
    y1 = y1 || 0;
    x2 = x2 || 0;
    y2 = y2 || 0;
    var path = &#39;M&#39; + x1 + &#39; &#39;+ y1 + &#39;L&#39; + x2 + &#39; &#39; + y2;

    return path;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="polyline-polygon-to-path" tabindex="-1"><a class="header-anchor" href="#polyline-polygon-to-path"><span>polyline/polygon to path</span></a></h3><p><code>polyline</code>折线、<code>polygon</code>多边形的转换为<code>path</code>比较类似，差别就是<code>polygon</code>多边形会闭合。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>// polygon折线转换
points = [x1, y1, x2, y2, x3, y3 ...];
function polyline2path (points) {
    var path = &#39;M&#39; + points.slice(0,2).join(&#39; &#39;) +
                    &#39;L&#39; + points.slice(2).join(&#39; &#39;); 
    return path;
}
// polygon多边形转换
points = [x1, y1, x2, y2, x3, y3 ...];
function polygon2path (points) {
    var path = &#39;M&#39; + points.slice(0,2).join(&#39; &#39;) +
                    &#39;L&#39; + points.slice(2).join(&#39; &#39;) + &#39;z&#39;; 
    return path;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="svg流动虚线" tabindex="-1"><a class="header-anchor" href="#svg流动虚线"><span>SVG流动虚线</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.water</span> <span class="token punctuation">{</span>
        <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 1000<span class="token punctuation">;</span>
        <span class="token property">stroke-dashoffset</span><span class="token punctuation">:</span> 1000<span class="token punctuation">;</span>
        <span class="token property">animation</span><span class="token punctuation">:</span> run 10s linear infinite<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token atrule"><span class="token rule">@keyframes</span> run</span> <span class="token punctuation">{</span>
        <span class="token selector">from</span> <span class="token punctuation">{</span>
            <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 10<span class="token punctuation">,</span> 5<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token selector">to</span> <span class="token punctuation">{</span>
            <span class="token property">stroke-dasharray</span><span class="token punctuation">:</span> 20<span class="token punctuation">,</span> 5<span class="token punctuation">;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300px<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100px<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rect</span> <span class="token attr-name">x</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">y</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>300<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>yellow<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>15<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>blue<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>black<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animateMotion</span> <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M 1306 637.125 L 1306 581.75 <span class="token punctuation">&quot;</span></span> <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>3s<span class="token punctuation">&quot;</span></span> <span class="token attr-name">repeatCount</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>indefinite<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>g</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>black<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">stroke-dasharray</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5,5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M5 20 l215 0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">stroke-dasharray</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10,10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M5 40 l215 0<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">stroke-dasharray</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20,10,5,5,5,10<span class="token punctuation">&quot;</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M5 60 l215 0<span class="token punctuation">&quot;</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>water<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>g</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="svg沿路径移动特效" tabindex="-1"><a class="header-anchor" href="#svg沿路径移动特效"><span>SVG沿路径移动特效</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>0 0 200 100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2000/svg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>none<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lightgrey<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>5<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>animateMotion</span> <span class="token attr-name">dur</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10s<span class="token punctuation">&quot;</span></span> <span class="token attr-name">repeatCount</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>indefinite<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">path</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>circle</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function P(Z,D){const a=c("ExternalLinkIcon");return i(),o("div",null,[u,s("p",null,[n("前段时间研究 SVG 压缩优化，发现SVG预定义的 "),d,n("、"),r,n("、"),v,n("、"),k,n("、"),h,n("、"),g,n(),s("a",m,[n("六种基本形状"),e(a)]),n("可通过"),s("a",x,[b,n("路径"),e(a)]),n("转换实现，这样可以在一定程度上减少代码量。不仅如此，我们常用的 SVG Path 动画(路径动画)，是以操作"),f,n("中两个属性值"),y,n("和"),q,n("来实现，基本形状转换为"),_,n("路径，有利于实现路径动画。")]),w,s("p",null,[n("SVG 提供了"),S,n("、"),V,n("、"),M,n("、"),j,n("、"),G,n("、"),z,n("六种"),s("a",C,[n("基本形状"),e(a)]),n("用于图形绘制，这些形状可以直接用来绘制一些基本的形状，如矩形、椭圆等，而复杂图形的绘制则需要使用 "),N,n(" 路径来实现。")]),L,s("p",null,[n("SVG 的"),s("a",T,[n("路径``"),e(a)]),n("功能非常强大，它不仅能创建基本形状，还能创建更多复杂的形状。"),A,n("路径是由一些命令来控制的，每一个命令对应一个字母，并且区分大小写，大写主要表示绝对定位，小写表示相对定位。"),B,n(" 通过属性 "),H,n(" 来定义路径， "),E,n(" 是一系列命令的集合，主要有以下几个命令：")]),I])}const R=l(p,[["render",P],["__file","css.html.vue"]]),U=JSON.parse('{"path":"/web/css/css.html","title":"CSS相关","lang":"zh-CN","frontmatter":{"title":"CSS相关","icon":"gears","order":4,"category":["web"],"tag":["js"],"navbar":true,"sidebar":true,"breadcrumb":true,"pageInfo":false,"contributors":true,"editLink":true,"lastUpdated":true,"prev":true,"next":true,"comment":true,"footer":true,"backtotop":false,"description":"css总结 1.div上下布局 2.div虚线边框 3.flex布局 1、flex-direction属性 flex-direction属性决定主轴的方向（即项目的排列方向）。 2、flex-wrap属性 默认情况下，项目都排在一条线（又称\\"轴线\\"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 nowrap（默认）：不换行。 wrap...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blogs/web/css/css.html"}],["meta",{"property":"og:site_name","content":"孜然地球"}],["meta",{"property":"og:title","content":"CSS相关"}],["meta",{"property":"og:description","content":"css总结 1.div上下布局 2.div虚线边框 3.flex布局 1、flex-direction属性 flex-direction属性决定主轴的方向（即项目的排列方向）。 2、flex-wrap属性 默认情况下，项目都排在一条线（又称\\"轴线\\"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。 nowrap（默认）：不换行。 wrap..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/svgpath2.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-02T10:18:56.000Z"}],["meta",{"property":"article:author","content":"孜然地球"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:modified_time","content":"2024-07-02T10:18:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS相关\\",\\"image\\":[\\"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/svgpath2.png\\",\\"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/rect2path.png\\",\\"https://www.w3cplus.com/sites/default/files/blogs/2018/1801/ellipse2path.png\\"],\\"dateModified\\":\\"2024-07-02T10:18:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"孜然地球\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1.div上下布局","slug":"_1-div上下布局","link":"#_1-div上下布局","children":[]},{"level":2,"title":"2.div虚线边框","slug":"_2-div虚线边框","link":"#_2-div虚线边框","children":[]},{"level":2,"title":"3.flex布局","slug":"_3-flex布局","link":"#_3-flex布局","children":[{"level":3,"title":"1、flex-direction属性","slug":"_1、flex-direction属性","link":"#_1、flex-direction属性","children":[]},{"level":3,"title":"2、flex-wrap属性","slug":"_2、flex-wrap属性","link":"#_2、flex-wrap属性","children":[]},{"level":3,"title":"3、flex-flow","slug":"_3、flex-flow","link":"#_3、flex-flow","children":[]},{"level":3,"title":"4、justify-content属性","slug":"_4、justify-content属性","link":"#_4、justify-content属性","children":[]},{"level":3,"title":"5、align-items属性","slug":"_5、align-items属性","link":"#_5、align-items属性","children":[]},{"level":3,"title":"6、align-content属性","slug":"_6、align-content属性","link":"#_6、align-content属性","children":[]}]},{"level":2,"title":"4.项目的属性","slug":"_4-项目的属性","link":"#_4-项目的属性","children":[{"level":3,"title":"1、order属性","slug":"_1、order属性","link":"#_1、order属性","children":[]},{"level":3,"title":"2、flex-grow属性","slug":"_2、flex-grow属性","link":"#_2、flex-grow属性","children":[]},{"level":3,"title":"3、flex-shrink","slug":"_3、flex-shrink","link":"#_3、flex-shrink","children":[]},{"level":3,"title":"4、flex-basis属性","slug":"_4、flex-basis属性","link":"#_4、flex-basis属性","children":[]},{"level":3,"title":"5、flex属性","slug":"_5、flex属性","link":"#_5、flex属性","children":[]},{"level":3,"title":"6、align-self属性","slug":"_6、align-self属性","link":"#_6、align-self属性","children":[]}]},{"level":2,"title":"5.svg","slug":"_5-svg","link":"#_5-svg","children":[]},{"level":2,"title":"SVG基本形状","slug":"svg基本形状","link":"#svg基本形状","children":[{"level":3,"title":"rect 矩形","slug":"rect-矩形","link":"#rect-矩形","children":[]},{"level":3,"title":"circle 圆形","slug":"circle-圆形","link":"#circle-圆形","children":[]},{"level":3,"title":"ellipse 椭圆","slug":"ellipse-椭圆","link":"#ellipse-椭圆","children":[]},{"level":3,"title":"line 直线","slug":"line-直线","link":"#line-直线","children":[]},{"level":3,"title":"polyline 折线","slug":"polyline-折线","link":"#polyline-折线","children":[]},{"level":3,"title":"polygon 多边形","slug":"polygon-多边形","link":"#polygon-多边形","children":[]}]},{"level":2,"title":"SVG path 路径","slug":"svg-path-路径","link":"#svg-path-路径","children":[]},{"level":2,"title":"SVG 基本形状路径转换原理","slug":"svg-基本形状路径转换原理","link":"#svg-基本形状路径转换原理","children":[{"level":3,"title":"rect to path","slug":"rect-to-path","link":"#rect-to-path","children":[]},{"level":3,"title":"circle/ellipse to path","slug":"circle-ellipse-to-path","link":"#circle-ellipse-to-path","children":[]},{"level":3,"title":"line to path","slug":"line-to-path","link":"#line-to-path","children":[]},{"level":3,"title":"polyline/polygon to path","slug":"polyline-polygon-to-path","link":"#polyline-polygon-to-path","children":[]},{"level":3,"title":"SVG流动虚线","slug":"svg流动虚线","link":"#svg流动虚线","children":[]},{"level":3,"title":"SVG沿路径移动特效","slug":"svg沿路径移动特效","link":"#svg沿路径移动特效","children":[]}]}],"git":{"createdTime":1719915536000,"updatedTime":1719915536000,"contributors":[{"name":"sola-grj","email":"1131631886@qq.com","commits":1}]},"readingTime":{"minutes":10.26,"words":3078},"filePathRelative":"web/css/css.md","localizedDate":"2024年7月2日","excerpt":"\\n<h2>1.div上下布局</h2>\\n<div class=\\"language-css\\" data-ext=\\"css\\" data-title=\\"css\\"><pre class=\\"language-css\\"><code><span class=\\"token selector\\">.zj</span>  <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token property\\">width</span><span class=\\"token punctuation\\">:</span> 100%<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token property\\">height</span><span class=\\"token punctuation\\">:</span> 40%<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token property\\">display</span><span class=\\"token punctuation\\">:</span> flex<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token property\\">flex-direction</span><span class=\\"token punctuation\\">:</span> column<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{R as comp,U as data};
